// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _img_filter_hw_HH_
#define _img_filter_hw_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "img_filter_hw_am_bkb.h"
#include "fifo_w8_d640_A.h"
#include "img_filter_hw_AXILiteS_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_AXILITES_ADDR_WIDTH = 4,
         unsigned int C_S_AXI_AXILITES_DATA_WIDTH = 32>
struct img_filter_hw : public sc_module {
    // Port declarations 38
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_lv<24> > in_r_TDATA;
    sc_in< sc_logic > in_r_TVALID;
    sc_out< sc_logic > in_r_TREADY;
    sc_in< sc_lv<3> > in_r_TKEEP;
    sc_in< sc_lv<3> > in_r_TSTRB;
    sc_in< sc_lv<1> > in_r_TUSER;
    sc_in< sc_lv<1> > in_r_TLAST;
    sc_in< sc_lv<1> > in_r_TID;
    sc_in< sc_lv<1> > in_r_TDEST;
    sc_out< sc_lv<24> > out_r_TDATA;
    sc_out< sc_logic > out_r_TVALID;
    sc_in< sc_logic > out_r_TREADY;
    sc_out< sc_lv<3> > out_r_TKEEP;
    sc_out< sc_lv<3> > out_r_TSTRB;
    sc_out< sc_lv<1> > out_r_TUSER;
    sc_out< sc_lv<1> > out_r_TLAST;
    sc_out< sc_lv<1> > out_r_TID;
    sc_out< sc_lv<1> > out_r_TDEST;
    sc_in< sc_logic > s_axi_AXILiteS_AWVALID;
    sc_out< sc_logic > s_axi_AXILiteS_AWREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_AWADDR;
    sc_in< sc_logic > s_axi_AXILiteS_WVALID;
    sc_out< sc_logic > s_axi_AXILiteS_WREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_WDATA;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH/8> > s_axi_AXILiteS_WSTRB;
    sc_in< sc_logic > s_axi_AXILiteS_ARVALID;
    sc_out< sc_logic > s_axi_AXILiteS_ARREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_ARADDR;
    sc_out< sc_logic > s_axi_AXILiteS_RVALID;
    sc_in< sc_logic > s_axi_AXILiteS_RREADY;
    sc_out< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_RDATA;
    sc_out< sc_lv<2> > s_axi_AXILiteS_RRESP;
    sc_out< sc_logic > s_axi_AXILiteS_BVALID;
    sc_in< sc_logic > s_axi_AXILiteS_BREADY;
    sc_out< sc_lv<2> > s_axi_AXILiteS_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    img_filter_hw(sc_module_name name);
    SC_HAS_PROCESS(img_filter_hw);

    ~img_filter_hw();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    img_filter_hw_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>* img_filter_hw_AXILiteS_s_axi_U;
    img_filter_hw_am_bkb<1,1,9,8,12,22>* img_filter_hw_am_bkb_U1;
    fifo_w8_d640_A* buff1_V_V_fifo_U;
    fifo_w8_d640_A* buff2_V_V_fifo_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<24> > in_V_data_V_0_data_out;
    sc_signal< sc_logic > in_V_data_V_0_vld_in;
    sc_signal< sc_logic > in_V_data_V_0_vld_out;
    sc_signal< sc_logic > in_V_data_V_0_ack_in;
    sc_signal< sc_logic > in_V_data_V_0_ack_out;
    sc_signal< sc_lv<24> > in_V_data_V_0_payload_A;
    sc_signal< sc_lv<24> > in_V_data_V_0_payload_B;
    sc_signal< sc_logic > in_V_data_V_0_sel_rd;
    sc_signal< sc_logic > in_V_data_V_0_sel_wr;
    sc_signal< sc_logic > in_V_data_V_0_sel;
    sc_signal< sc_logic > in_V_data_V_0_load_A;
    sc_signal< sc_logic > in_V_data_V_0_load_B;
    sc_signal< sc_lv<2> > in_V_data_V_0_state;
    sc_signal< sc_logic > in_V_data_V_0_state_cmp_full;
    sc_signal< sc_logic > in_V_dest_V_0_vld_in;
    sc_signal< sc_logic > in_V_dest_V_0_ack_out;
    sc_signal< sc_lv<2> > in_V_dest_V_0_state;
    sc_signal< sc_lv<24> > out_V_data_V_1_data_out;
    sc_signal< sc_logic > out_V_data_V_1_vld_in;
    sc_signal< sc_logic > out_V_data_V_1_vld_out;
    sc_signal< sc_logic > out_V_data_V_1_ack_in;
    sc_signal< sc_logic > out_V_data_V_1_ack_out;
    sc_signal< sc_lv<24> > out_V_data_V_1_payload_A;
    sc_signal< sc_lv<24> > out_V_data_V_1_payload_B;
    sc_signal< sc_logic > out_V_data_V_1_sel_rd;
    sc_signal< sc_logic > out_V_data_V_1_sel_wr;
    sc_signal< sc_logic > out_V_data_V_1_sel;
    sc_signal< sc_logic > out_V_data_V_1_load_A;
    sc_signal< sc_logic > out_V_data_V_1_load_B;
    sc_signal< sc_lv<2> > out_V_data_V_1_state;
    sc_signal< sc_logic > out_V_data_V_1_state_cmp_full;
    sc_signal< sc_lv<3> > out_V_keep_V_1_data_out;
    sc_signal< sc_logic > out_V_keep_V_1_vld_in;
    sc_signal< sc_logic > out_V_keep_V_1_vld_out;
    sc_signal< sc_logic > out_V_keep_V_1_ack_in;
    sc_signal< sc_logic > out_V_keep_V_1_ack_out;
    sc_signal< sc_logic > out_V_keep_V_1_sel_rd;
    sc_signal< sc_logic > out_V_keep_V_1_sel;
    sc_signal< sc_lv<2> > out_V_keep_V_1_state;
    sc_signal< sc_lv<3> > out_V_strb_V_1_data_out;
    sc_signal< sc_logic > out_V_strb_V_1_vld_in;
    sc_signal< sc_logic > out_V_strb_V_1_vld_out;
    sc_signal< sc_logic > out_V_strb_V_1_ack_in;
    sc_signal< sc_logic > out_V_strb_V_1_ack_out;
    sc_signal< sc_logic > out_V_strb_V_1_sel_rd;
    sc_signal< sc_logic > out_V_strb_V_1_sel;
    sc_signal< sc_lv<2> > out_V_strb_V_1_state;
    sc_signal< sc_lv<1> > out_V_user_V_1_data_out;
    sc_signal< sc_logic > out_V_user_V_1_vld_in;
    sc_signal< sc_logic > out_V_user_V_1_vld_out;
    sc_signal< sc_logic > out_V_user_V_1_ack_in;
    sc_signal< sc_logic > out_V_user_V_1_ack_out;
    sc_signal< sc_logic > out_V_user_V_1_sel_rd;
    sc_signal< sc_logic > out_V_user_V_1_sel;
    sc_signal< sc_lv<2> > out_V_user_V_1_state;
    sc_signal< sc_lv<1> > out_V_last_V_1_data_out;
    sc_signal< sc_logic > out_V_last_V_1_vld_in;
    sc_signal< sc_logic > out_V_last_V_1_vld_out;
    sc_signal< sc_logic > out_V_last_V_1_ack_in;
    sc_signal< sc_logic > out_V_last_V_1_ack_out;
    sc_signal< sc_lv<1> > out_V_last_V_1_payload_A;
    sc_signal< sc_lv<1> > out_V_last_V_1_payload_B;
    sc_signal< sc_logic > out_V_last_V_1_sel_rd;
    sc_signal< sc_logic > out_V_last_V_1_sel_wr;
    sc_signal< sc_logic > out_V_last_V_1_sel;
    sc_signal< sc_logic > out_V_last_V_1_load_A;
    sc_signal< sc_logic > out_V_last_V_1_load_B;
    sc_signal< sc_lv<2> > out_V_last_V_1_state;
    sc_signal< sc_logic > out_V_last_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > out_V_id_V_1_data_out;
    sc_signal< sc_logic > out_V_id_V_1_vld_in;
    sc_signal< sc_logic > out_V_id_V_1_vld_out;
    sc_signal< sc_logic > out_V_id_V_1_ack_in;
    sc_signal< sc_logic > out_V_id_V_1_ack_out;
    sc_signal< sc_logic > out_V_id_V_1_sel_rd;
    sc_signal< sc_logic > out_V_id_V_1_sel;
    sc_signal< sc_lv<2> > out_V_id_V_1_state;
    sc_signal< sc_lv<1> > out_V_dest_V_1_data_out;
    sc_signal< sc_logic > out_V_dest_V_1_vld_in;
    sc_signal< sc_logic > out_V_dest_V_1_vld_out;
    sc_signal< sc_logic > out_V_dest_V_1_ack_in;
    sc_signal< sc_logic > out_V_dest_V_1_ack_out;
    sc_signal< sc_logic > out_V_dest_V_1_sel_rd;
    sc_signal< sc_logic > out_V_dest_V_1_sel;
    sc_signal< sc_lv<2> > out_V_dest_V_1_state;
    sc_signal< sc_logic > in_r_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > tmp_7_fu_362_p2;
    sc_signal< sc_logic > out_r_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<10> > col_2_fu_323_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<8> > buff1_V_V_din;
    sc_signal< sc_logic > buff1_V_V_full_n;
    sc_signal< sc_logic > buff1_V_V_write;
    sc_signal< sc_lv<1> > tmp_fu_317_p2;
    sc_signal< sc_lv<8> > buff2_V_V_din;
    sc_signal< sc_logic > buff2_V_V_full_n;
    sc_signal< sc_logic > buff2_V_V_write;
    sc_signal< bool > ap_block_state2;
    sc_signal< sc_lv<9> > row_1_fu_335_p2;
    sc_signal< sc_lv<9> > row_1_reg_679;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< bool > ap_block_state3;
    sc_signal< sc_lv<1> > tmp_6_fu_341_p2;
    sc_signal< sc_lv<1> > tmp_6_reg_684;
    sc_signal< sc_lv<1> > tmp_5_fu_329_p2;
    sc_signal< sc_lv<10> > col_3_fu_368_p2;
    sc_signal< sc_lv<10> > col_3_reg_692;
    sc_signal< sc_lv<8> > buff1_V_V_dout;
    sc_signal< sc_logic > buff1_V_V_empty_n;
    sc_signal< sc_logic > buff1_V_V_read;
    sc_signal< sc_lv<8> > buff2_V_V_dout;
    sc_signal< sc_logic > buff2_V_V_empty_n;
    sc_signal< sc_logic > buff2_V_V_read;
    sc_signal< bool > ap_block_state4;
    sc_signal< bool > ap_block_state4_io;
    sc_signal< sc_lv<24> > tmp_data_V_fu_536_p4;
    sc_signal< sc_lv<1> > tmp_last_V_fu_553_p2;
    sc_signal< sc_lv<10> > col_reg_284;
    sc_signal< sc_lv<9> > row_reg_295;
    sc_signal< sc_lv<10> > col_1_reg_306;
    sc_signal< sc_lv<8> > swin_0_1_V_fu_180;
    sc_signal< sc_lv<8> > swin_0_1_V_1_fu_184;
    sc_signal< sc_lv<8> > tmp_V_fu_188;
    sc_signal< sc_lv<8> > swin_1_0_V_fu_192;
    sc_signal< sc_lv<8> > swin_1_1_V_fu_196;
    sc_signal< sc_lv<8> > tmp_V_1_fu_200;
    sc_signal< sc_lv<8> > swin_2_0_V_fu_204;
    sc_signal< sc_lv<8> > swin_2_1_V_fu_208;
    sc_signal< sc_lv<8> > swin_2_2_V_fu_435_p4;
    sc_signal< sc_lv<8> > p_Result_s_fu_389_p4;
    sc_signal< sc_lv<8> > p_Result_1_fu_399_p4;
    sc_signal< sc_lv<9> > rhs_V_cast_fu_413_p1;
    sc_signal< sc_lv<9> > lhs_V_cast_fu_409_p1;
    sc_signal< sc_lv<9> > ret_V_fu_417_p2;
    sc_signal< sc_lv<8> > tmp_1_fu_423_p1;
    sc_signal< sc_lv<22> > grp_fu_599_p3;
    sc_signal< sc_lv<9> > lhs_V_3_cast_fu_448_p1;
    sc_signal< sc_lv<9> > lhs_V_2_cast_fu_444_p1;
    sc_signal< sc_lv<9> > lhs_V_4_cast_fu_458_p1;
    sc_signal< sc_lv<9> > ret_V_2_fu_452_p2;
    sc_signal< sc_lv<9> > ret_V_3_fu_462_p2;
    sc_signal< sc_lv<10> > lhs_V_5_cast_fu_468_p1;
    sc_signal< sc_lv<10> > rhs_V_3_cast_fu_472_p1;
    sc_signal< sc_lv<10> > ret_V_4_fu_476_p2;
    sc_signal< sc_lv<10> > rhs_V_4_cast_fu_482_p1;
    sc_signal< sc_lv<10> > ret_V_5_fu_486_p2;
    sc_signal< sc_lv<1> > tmp_4_fu_492_p3;
    sc_signal< sc_lv<10> > p_s_fu_500_p3;
    sc_signal< sc_lv<2> > tmp_9_fu_508_p4;
    sc_signal< sc_lv<1> > icmp_fu_518_p2;
    sc_signal< sc_lv<8> > tmp_10_fu_524_p1;
    sc_signal< sc_lv<8> > tmp_8_fu_528_p3;
    sc_signal< sc_lv<1> > tmp_3_fu_547_p2;
    sc_signal< sc_lv<9> > grp_fu_599_p0;
    sc_signal< sc_lv<8> > grp_fu_599_p1;
    sc_signal< sc_lv<12> > grp_fu_599_p2;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    sc_signal< sc_lv<10> > grp_fu_599_p00;
    sc_signal< sc_lv<10> > grp_fu_599_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_state2;
    static const sc_lv<5> ap_ST_fsm_state3;
    static const sc_lv<5> ap_ST_fsm_state4;
    static const sc_lv<5> ap_ST_fsm_state5;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const int C_S_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<3> ap_const_lv3_7;
    static const sc_lv<10> ap_const_lv10_27D;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<9> ap_const_lv9_1E0;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<9> ap_const_lv9_1DF;
    static const sc_lv<10> ap_const_lv10_280;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<10> ap_const_lv10_27F;
    static const sc_lv<22> ap_const_lv22_556;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_block_state2();
    void thread_ap_block_state3();
    void thread_ap_block_state4();
    void thread_ap_block_state4_io();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_buff1_V_V_din();
    void thread_buff1_V_V_read();
    void thread_buff1_V_V_write();
    void thread_buff2_V_V_din();
    void thread_buff2_V_V_read();
    void thread_buff2_V_V_write();
    void thread_col_2_fu_323_p2();
    void thread_col_3_fu_368_p2();
    void thread_grp_fu_599_p0();
    void thread_grp_fu_599_p00();
    void thread_grp_fu_599_p1();
    void thread_grp_fu_599_p10();
    void thread_grp_fu_599_p2();
    void thread_icmp_fu_518_p2();
    void thread_in_V_data_V_0_ack_in();
    void thread_in_V_data_V_0_ack_out();
    void thread_in_V_data_V_0_data_out();
    void thread_in_V_data_V_0_load_A();
    void thread_in_V_data_V_0_load_B();
    void thread_in_V_data_V_0_sel();
    void thread_in_V_data_V_0_state_cmp_full();
    void thread_in_V_data_V_0_vld_in();
    void thread_in_V_data_V_0_vld_out();
    void thread_in_V_dest_V_0_ack_out();
    void thread_in_V_dest_V_0_vld_in();
    void thread_in_r_TDATA_blk_n();
    void thread_in_r_TREADY();
    void thread_lhs_V_2_cast_fu_444_p1();
    void thread_lhs_V_3_cast_fu_448_p1();
    void thread_lhs_V_4_cast_fu_458_p1();
    void thread_lhs_V_5_cast_fu_468_p1();
    void thread_lhs_V_cast_fu_409_p1();
    void thread_out_V_data_V_1_ack_in();
    void thread_out_V_data_V_1_ack_out();
    void thread_out_V_data_V_1_data_out();
    void thread_out_V_data_V_1_load_A();
    void thread_out_V_data_V_1_load_B();
    void thread_out_V_data_V_1_sel();
    void thread_out_V_data_V_1_state_cmp_full();
    void thread_out_V_data_V_1_vld_in();
    void thread_out_V_data_V_1_vld_out();
    void thread_out_V_dest_V_1_ack_in();
    void thread_out_V_dest_V_1_ack_out();
    void thread_out_V_dest_V_1_data_out();
    void thread_out_V_dest_V_1_sel();
    void thread_out_V_dest_V_1_vld_in();
    void thread_out_V_dest_V_1_vld_out();
    void thread_out_V_id_V_1_ack_in();
    void thread_out_V_id_V_1_ack_out();
    void thread_out_V_id_V_1_data_out();
    void thread_out_V_id_V_1_sel();
    void thread_out_V_id_V_1_vld_in();
    void thread_out_V_id_V_1_vld_out();
    void thread_out_V_keep_V_1_ack_in();
    void thread_out_V_keep_V_1_ack_out();
    void thread_out_V_keep_V_1_data_out();
    void thread_out_V_keep_V_1_sel();
    void thread_out_V_keep_V_1_vld_in();
    void thread_out_V_keep_V_1_vld_out();
    void thread_out_V_last_V_1_ack_in();
    void thread_out_V_last_V_1_ack_out();
    void thread_out_V_last_V_1_data_out();
    void thread_out_V_last_V_1_load_A();
    void thread_out_V_last_V_1_load_B();
    void thread_out_V_last_V_1_sel();
    void thread_out_V_last_V_1_state_cmp_full();
    void thread_out_V_last_V_1_vld_in();
    void thread_out_V_last_V_1_vld_out();
    void thread_out_V_strb_V_1_ack_in();
    void thread_out_V_strb_V_1_ack_out();
    void thread_out_V_strb_V_1_data_out();
    void thread_out_V_strb_V_1_sel();
    void thread_out_V_strb_V_1_vld_in();
    void thread_out_V_strb_V_1_vld_out();
    void thread_out_V_user_V_1_ack_in();
    void thread_out_V_user_V_1_ack_out();
    void thread_out_V_user_V_1_data_out();
    void thread_out_V_user_V_1_sel();
    void thread_out_V_user_V_1_vld_in();
    void thread_out_V_user_V_1_vld_out();
    void thread_out_r_TDATA();
    void thread_out_r_TDATA_blk_n();
    void thread_out_r_TDEST();
    void thread_out_r_TID();
    void thread_out_r_TKEEP();
    void thread_out_r_TLAST();
    void thread_out_r_TSTRB();
    void thread_out_r_TUSER();
    void thread_out_r_TVALID();
    void thread_p_Result_1_fu_399_p4();
    void thread_p_Result_s_fu_389_p4();
    void thread_p_s_fu_500_p3();
    void thread_ret_V_2_fu_452_p2();
    void thread_ret_V_3_fu_462_p2();
    void thread_ret_V_4_fu_476_p2();
    void thread_ret_V_5_fu_486_p2();
    void thread_ret_V_fu_417_p2();
    void thread_rhs_V_3_cast_fu_472_p1();
    void thread_rhs_V_4_cast_fu_482_p1();
    void thread_rhs_V_cast_fu_413_p1();
    void thread_row_1_fu_335_p2();
    void thread_swin_2_2_V_fu_435_p4();
    void thread_tmp_10_fu_524_p1();
    void thread_tmp_1_fu_423_p1();
    void thread_tmp_3_fu_547_p2();
    void thread_tmp_4_fu_492_p3();
    void thread_tmp_5_fu_329_p2();
    void thread_tmp_6_fu_341_p2();
    void thread_tmp_7_fu_362_p2();
    void thread_tmp_8_fu_528_p3();
    void thread_tmp_9_fu_508_p4();
    void thread_tmp_data_V_fu_536_p4();
    void thread_tmp_fu_317_p2();
    void thread_tmp_last_V_fu_553_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
