// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "img_filter_hw.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic img_filter_hw::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic img_filter_hw::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> img_filter_hw::ap_ST_fsm_state1 = "1";
const sc_lv<4> img_filter_hw::ap_ST_fsm_state2 = "10";
const sc_lv<4> img_filter_hw::ap_ST_fsm_pp0_stage0 = "100";
const sc_lv<4> img_filter_hw::ap_ST_fsm_state6 = "1000";
const sc_lv<32> img_filter_hw::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool img_filter_hw::ap_const_boolean_1 = true;
const sc_lv<1> img_filter_hw::ap_const_lv1_0 = "0";
const sc_lv<1> img_filter_hw::ap_const_lv1_1 = "1";
const sc_lv<2> img_filter_hw::ap_const_lv2_0 = "00";
const sc_lv<2> img_filter_hw::ap_const_lv2_2 = "10";
const sc_lv<2> img_filter_hw::ap_const_lv2_3 = "11";
const sc_lv<2> img_filter_hw::ap_const_lv2_1 = "1";
const sc_lv<32> img_filter_hw::ap_const_lv32_2 = "10";
const bool img_filter_hw::ap_const_boolean_0 = false;
const int img_filter_hw::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> img_filter_hw::ap_const_lv32_1 = "1";
const sc_lv<10> img_filter_hw::ap_const_lv10_0 = "0000000000";
const sc_lv<19> img_filter_hw::ap_const_lv19_0 = "0000000000000000000";
const sc_lv<9> img_filter_hw::ap_const_lv9_0 = "000000000";
const sc_lv<8> img_filter_hw::ap_const_lv8_0 = "00000000";
const sc_lv<3> img_filter_hw::ap_const_lv3_7 = "111";
const sc_lv<10> img_filter_hw::ap_const_lv10_27D = "1001111101";
const sc_lv<10> img_filter_hw::ap_const_lv10_1 = "1";
const sc_lv<19> img_filter_hw::ap_const_lv19_4B000 = "1001011000000000000";
const sc_lv<19> img_filter_hw::ap_const_lv19_1 = "1";
const sc_lv<32> img_filter_hw::ap_const_lv32_10 = "10000";
const sc_lv<32> img_filter_hw::ap_const_lv32_17 = "10111";
const sc_lv<32> img_filter_hw::ap_const_lv32_8 = "1000";
const sc_lv<32> img_filter_hw::ap_const_lv32_F = "1111";
const sc_lv<32> img_filter_hw::ap_const_lv32_C = "1100";
const sc_lv<32> img_filter_hw::ap_const_lv32_13 = "10011";
const sc_lv<10> img_filter_hw::ap_const_lv10_280 = "1010000000";
const sc_lv<9> img_filter_hw::ap_const_lv9_1 = "1";
const sc_lv<9> img_filter_hw::ap_const_lv9_1DF = "111011111";
const sc_lv<32> img_filter_hw::ap_const_lv32_9 = "1001";
const sc_lv<8> img_filter_hw::ap_const_lv8_FF = "11111111";
const sc_lv<10> img_filter_hw::ap_const_lv10_27F = "1001111111";
const sc_lv<22> img_filter_hw::ap_const_lv22_556 = "10101010110";
const sc_lv<32> img_filter_hw::ap_const_lv32_3 = "11";

img_filter_hw::img_filter_hw(sc_module_name name) : sc_module(name), mVcdFile(0) {
    img_filter_hw_AXILiteS_s_axi_U = new img_filter_hw_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("img_filter_hw_AXILiteS_s_axi_U");
    img_filter_hw_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    img_filter_hw_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    img_filter_hw_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    img_filter_hw_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    img_filter_hw_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    img_filter_hw_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    img_filter_hw_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    img_filter_hw_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    img_filter_hw_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    img_filter_hw_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    img_filter_hw_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    img_filter_hw_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    img_filter_hw_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    img_filter_hw_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    img_filter_hw_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    img_filter_hw_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    img_filter_hw_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    img_filter_hw_AXILiteS_s_axi_U->ACLK(ap_clk);
    img_filter_hw_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    img_filter_hw_AXILiteS_s_axi_U->ACLK_EN(ap_var_for_const0);
    img_filter_hw_AXILiteS_s_axi_U->ap_start(ap_start);
    img_filter_hw_AXILiteS_s_axi_U->interrupt(interrupt);
    img_filter_hw_AXILiteS_s_axi_U->ap_ready(ap_ready);
    img_filter_hw_AXILiteS_s_axi_U->ap_done(ap_done);
    img_filter_hw_AXILiteS_s_axi_U->ap_idle(ap_idle);
    img_filter_hw_am_bkb_U1 = new img_filter_hw_am_bkb<1,1,9,8,12,22>("img_filter_hw_am_bkb_U1");
    img_filter_hw_am_bkb_U1->din0(grp_fu_639_p0);
    img_filter_hw_am_bkb_U1->din1(grp_fu_639_p1);
    img_filter_hw_am_bkb_U1->din2(grp_fu_639_p2);
    img_filter_hw_am_bkb_U1->dout(grp_fu_639_p3);
    buff1_V_V_fifo_U = new fifo_w8_d640_A("buff1_V_V_fifo_U");
    buff1_V_V_fifo_U->clk(ap_clk);
    buff1_V_V_fifo_U->reset(ap_rst_n_inv);
    buff1_V_V_fifo_U->if_read_ce(ap_var_for_const0);
    buff1_V_V_fifo_U->if_write_ce(ap_var_for_const0);
    buff1_V_V_fifo_U->if_din(buff1_V_V_din);
    buff1_V_V_fifo_U->if_full_n(buff1_V_V_full_n);
    buff1_V_V_fifo_U->if_write(buff1_V_V_write);
    buff1_V_V_fifo_U->if_dout(buff1_V_V_dout);
    buff1_V_V_fifo_U->if_empty_n(buff1_V_V_empty_n);
    buff1_V_V_fifo_U->if_read(buff1_V_V_read);
    buff2_V_V_fifo_U = new fifo_w8_d640_A("buff2_V_V_fifo_U");
    buff2_V_V_fifo_U->clk(ap_clk);
    buff2_V_V_fifo_U->reset(ap_rst_n_inv);
    buff2_V_V_fifo_U->if_read_ce(ap_var_for_const0);
    buff2_V_V_fifo_U->if_write_ce(ap_var_for_const0);
    buff2_V_V_fifo_U->if_din(buff2_V_V_din);
    buff2_V_V_fifo_U->if_full_n(buff2_V_V_full_n);
    buff2_V_V_fifo_U->if_write(buff2_V_V_write);
    buff2_V_V_fifo_U->if_dout(buff2_V_V_dout);
    buff2_V_V_fifo_U->if_empty_n(buff2_V_V_empty_n);
    buff2_V_V_fifo_U->if_read(buff2_V_V_read);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( in_V_data_V_0_vld_out );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_fu_344_p2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_717 );
    sensitive << ( buff1_V_V_full_n );
    sensitive << ( buff2_V_V_full_n );
    sensitive << ( buff1_V_V_empty_n );
    sensitive << ( buff2_V_V_empty_n );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( in_V_data_V_0_vld_out );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_fu_344_p2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_717 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( buff1_V_V_full_n );
    sensitive << ( buff2_V_V_full_n );
    sensitive << ( buff1_V_V_empty_n );
    sensitive << ( buff2_V_V_empty_n );
    sensitive << ( ap_block_state4_io );
    sensitive << ( ap_block_state5_io );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( in_V_data_V_0_vld_out );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_fu_344_p2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_717 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( buff1_V_V_full_n );
    sensitive << ( buff2_V_V_full_n );
    sensitive << ( buff1_V_V_empty_n );
    sensitive << ( buff2_V_V_empty_n );
    sensitive << ( ap_block_state4_io );
    sensitive << ( ap_block_state5_io );

    SC_METHOD(thread_ap_block_state2);
    sensitive << ( tmp_fu_332_p2 );
    sensitive << ( buff1_V_V_full_n );
    sensitive << ( buff2_V_V_full_n );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter0);
    sensitive << ( in_V_data_V_0_vld_out );
    sensitive << ( exitcond_flatten_fu_344_p2 );

    SC_METHOD(thread_ap_block_state4_io);
    sensitive << ( out_V_data_V_1_ack_in );
    sensitive << ( exitcond_flatten_reg_717 );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter1);
    sensitive << ( exitcond_flatten_reg_717 );
    sensitive << ( buff1_V_V_full_n );
    sensitive << ( buff2_V_V_full_n );
    sensitive << ( buff1_V_V_empty_n );
    sensitive << ( buff2_V_V_empty_n );

    SC_METHOD(thread_ap_block_state5_io);
    sensitive << ( out_V_data_V_1_ack_in );
    sensitive << ( exitcond_flatten_reg_717_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state6);
    sensitive << ( out_V_data_V_1_ack_in );
    sensitive << ( out_V_keep_V_1_ack_in );
    sensitive << ( out_V_strb_V_1_ack_in );
    sensitive << ( out_V_user_V_1_ack_in );
    sensitive << ( out_V_last_V_1_ack_in );
    sensitive << ( out_V_id_V_1_ack_in );
    sensitive << ( out_V_dest_V_1_ack_in );

    SC_METHOD(thread_ap_condition_pp0_exit_iter1_state4);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_done);
    sensitive << ( out_V_data_V_1_ack_in );
    sensitive << ( out_V_data_V_1_state );
    sensitive << ( out_V_keep_V_1_ack_in );
    sensitive << ( out_V_keep_V_1_state );
    sensitive << ( out_V_strb_V_1_ack_in );
    sensitive << ( out_V_strb_V_1_state );
    sensitive << ( out_V_user_V_1_ack_in );
    sensitive << ( out_V_user_V_1_state );
    sensitive << ( out_V_last_V_1_ack_in );
    sensitive << ( out_V_last_V_1_state );
    sensitive << ( out_V_id_V_1_ack_in );
    sensitive << ( out_V_id_V_1_state );
    sensitive << ( out_V_dest_V_1_ack_in );
    sensitive << ( out_V_dest_V_1_state );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( out_V_data_V_1_ack_in );
    sensitive << ( out_V_data_V_1_state );
    sensitive << ( out_V_keep_V_1_ack_in );
    sensitive << ( out_V_keep_V_1_state );
    sensitive << ( out_V_strb_V_1_ack_in );
    sensitive << ( out_V_strb_V_1_state );
    sensitive << ( out_V_user_V_1_ack_in );
    sensitive << ( out_V_user_V_1_state );
    sensitive << ( out_V_last_V_1_ack_in );
    sensitive << ( out_V_last_V_1_state );
    sensitive << ( out_V_id_V_1_ack_in );
    sensitive << ( out_V_id_V_1_state );
    sensitive << ( out_V_dest_V_1_ack_in );
    sensitive << ( out_V_dest_V_1_state );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_buff1_V_V_din);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_717 );
    sensitive << ( tmp_fu_332_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( buff1_V_V_full_n );
    sensitive << ( buff2_V_V_full_n );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( tmp_V_fu_192 );

    SC_METHOD(thread_buff1_V_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_717 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_buff1_V_V_write);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_717 );
    sensitive << ( tmp_fu_332_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( buff1_V_V_full_n );
    sensitive << ( buff2_V_V_full_n );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_buff2_V_V_din);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_717 );
    sensitive << ( tmp_fu_332_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( buff1_V_V_full_n );
    sensitive << ( buff2_V_V_full_n );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( tmp_V_1_fu_204 );

    SC_METHOD(thread_buff2_V_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_717 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_buff2_V_V_write);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_717 );
    sensitive << ( tmp_fu_332_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( buff1_V_V_full_n );
    sensitive << ( buff2_V_V_full_n );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_col_1_mid2_fu_472_p3);
    sensitive << ( col_1_reg_321 );
    sensitive << ( tmp_s_fu_466_p2 );

    SC_METHOD(thread_col_2_fu_338_p2);
    sensitive << ( col_reg_288 );

    SC_METHOD(thread_col_3_fu_619_p2);
    sensitive << ( col_1_mid2_fu_472_p3 );

    SC_METHOD(thread_exitcond_flatten_fu_344_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( indvar_flatten_reg_299 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_639_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_flatten_fu_344_p2 );
    sensitive << ( grp_fu_639_p00 );

    SC_METHOD(thread_grp_fu_639_p00);
    sensitive << ( ret_V_fu_388_p2 );

    SC_METHOD(thread_grp_fu_639_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_flatten_fu_344_p2 );
    sensitive << ( grp_fu_639_p10 );

    SC_METHOD(thread_grp_fu_639_p10);
    sensitive << ( tmp_2_fu_394_p1 );

    SC_METHOD(thread_grp_fu_639_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_flatten_fu_344_p2 );

    SC_METHOD(thread_icmp_fu_577_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_717 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_5_fu_567_p4 );

    SC_METHOD(thread_in_V_data_V_0_ack_in);
    sensitive << ( in_V_data_V_0_state );

    SC_METHOD(thread_in_V_data_V_0_ack_out);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_fu_344_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_in_V_data_V_0_data_out);
    sensitive << ( in_V_data_V_0_payload_A );
    sensitive << ( in_V_data_V_0_payload_B );
    sensitive << ( in_V_data_V_0_sel );

    SC_METHOD(thread_in_V_data_V_0_load_A);
    sensitive << ( in_V_data_V_0_sel_wr );
    sensitive << ( in_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_in_V_data_V_0_load_B);
    sensitive << ( in_V_data_V_0_sel_wr );
    sensitive << ( in_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_in_V_data_V_0_sel);
    sensitive << ( in_V_data_V_0_sel_rd );

    SC_METHOD(thread_in_V_data_V_0_state_cmp_full);
    sensitive << ( in_V_data_V_0_state );

    SC_METHOD(thread_in_V_data_V_0_vld_in);
    sensitive << ( in_r_TVALID );

    SC_METHOD(thread_in_V_data_V_0_vld_out);
    sensitive << ( in_V_data_V_0_state );

    SC_METHOD(thread_in_V_dest_V_0_ack_out);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_fu_344_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_in_V_dest_V_0_vld_in);
    sensitive << ( in_r_TVALID );

    SC_METHOD(thread_in_r_TDATA_blk_n);
    sensitive << ( in_V_data_V_0_state );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_flatten_fu_344_p2 );

    SC_METHOD(thread_in_r_TREADY);
    sensitive << ( in_V_dest_V_0_state );

    SC_METHOD(thread_indvar_flatten_next_fu_350_p2);
    sensitive << ( indvar_flatten_reg_299 );

    SC_METHOD(thread_lhs_V_1_fu_528_p1);
    sensitive << ( ret_V_2_fu_522_p2 );

    SC_METHOD(thread_lhs_V_cast_fu_380_p1);
    sensitive << ( p_Result_s_fu_360_p4 );

    SC_METHOD(thread_lhs_V_fu_514_p1);
    sensitive << ( swin_V_0_1_1_fu_184 );

    SC_METHOD(thread_out_V_data_V_1_ack_in);
    sensitive << ( out_V_data_V_1_state );

    SC_METHOD(thread_out_V_data_V_1_ack_out);
    sensitive << ( out_r_TREADY );

    SC_METHOD(thread_out_V_data_V_1_data_out);
    sensitive << ( out_V_data_V_1_payload_A );
    sensitive << ( out_V_data_V_1_payload_B );
    sensitive << ( out_V_data_V_1_sel );

    SC_METHOD(thread_out_V_data_V_1_load_A);
    sensitive << ( out_V_data_V_1_sel_wr );
    sensitive << ( out_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_out_V_data_V_1_load_B);
    sensitive << ( out_V_data_V_1_sel_wr );
    sensitive << ( out_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_out_V_data_V_1_sel);
    sensitive << ( out_V_data_V_1_sel_rd );

    SC_METHOD(thread_out_V_data_V_1_state_cmp_full);
    sensitive << ( out_V_data_V_1_state );

    SC_METHOD(thread_out_V_data_V_1_vld_in);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_717 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_out_V_data_V_1_vld_out);
    sensitive << ( out_V_data_V_1_state );

    SC_METHOD(thread_out_V_dest_V_1_ack_in);
    sensitive << ( out_V_dest_V_1_state );

    SC_METHOD(thread_out_V_dest_V_1_ack_out);
    sensitive << ( out_r_TREADY );

    SC_METHOD(thread_out_V_dest_V_1_data_out);
    sensitive << ( out_V_dest_V_1_sel );

    SC_METHOD(thread_out_V_dest_V_1_sel);
    sensitive << ( out_V_dest_V_1_sel_rd );

    SC_METHOD(thread_out_V_dest_V_1_vld_in);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_717 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_out_V_dest_V_1_vld_out);
    sensitive << ( out_V_dest_V_1_state );

    SC_METHOD(thread_out_V_id_V_1_ack_in);
    sensitive << ( out_V_id_V_1_state );

    SC_METHOD(thread_out_V_id_V_1_ack_out);
    sensitive << ( out_r_TREADY );

    SC_METHOD(thread_out_V_id_V_1_data_out);
    sensitive << ( out_V_id_V_1_sel );

    SC_METHOD(thread_out_V_id_V_1_sel);
    sensitive << ( out_V_id_V_1_sel_rd );

    SC_METHOD(thread_out_V_id_V_1_vld_in);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_717 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_out_V_id_V_1_vld_out);
    sensitive << ( out_V_id_V_1_state );

    SC_METHOD(thread_out_V_keep_V_1_ack_in);
    sensitive << ( out_V_keep_V_1_state );

    SC_METHOD(thread_out_V_keep_V_1_ack_out);
    sensitive << ( out_r_TREADY );

    SC_METHOD(thread_out_V_keep_V_1_data_out);
    sensitive << ( out_V_keep_V_1_sel );

    SC_METHOD(thread_out_V_keep_V_1_sel);
    sensitive << ( out_V_keep_V_1_sel_rd );

    SC_METHOD(thread_out_V_keep_V_1_vld_in);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_717 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_out_V_keep_V_1_vld_out);
    sensitive << ( out_V_keep_V_1_state );

    SC_METHOD(thread_out_V_last_V_1_ack_in);
    sensitive << ( out_V_last_V_1_state );

    SC_METHOD(thread_out_V_last_V_1_ack_out);
    sensitive << ( out_r_TREADY );

    SC_METHOD(thread_out_V_last_V_1_data_out);
    sensitive << ( out_V_last_V_1_payload_A );
    sensitive << ( out_V_last_V_1_payload_B );
    sensitive << ( out_V_last_V_1_sel );

    SC_METHOD(thread_out_V_last_V_1_load_A);
    sensitive << ( out_V_last_V_1_sel_wr );
    sensitive << ( out_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_out_V_last_V_1_load_B);
    sensitive << ( out_V_last_V_1_sel_wr );
    sensitive << ( out_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_out_V_last_V_1_sel);
    sensitive << ( out_V_last_V_1_sel_rd );

    SC_METHOD(thread_out_V_last_V_1_state_cmp_full);
    sensitive << ( out_V_last_V_1_state );

    SC_METHOD(thread_out_V_last_V_1_vld_in);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_717 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_out_V_last_V_1_vld_out);
    sensitive << ( out_V_last_V_1_state );

    SC_METHOD(thread_out_V_strb_V_1_ack_in);
    sensitive << ( out_V_strb_V_1_state );

    SC_METHOD(thread_out_V_strb_V_1_ack_out);
    sensitive << ( out_r_TREADY );

    SC_METHOD(thread_out_V_strb_V_1_data_out);
    sensitive << ( out_V_strb_V_1_sel );

    SC_METHOD(thread_out_V_strb_V_1_sel);
    sensitive << ( out_V_strb_V_1_sel_rd );

    SC_METHOD(thread_out_V_strb_V_1_vld_in);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_717 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_out_V_strb_V_1_vld_out);
    sensitive << ( out_V_strb_V_1_state );

    SC_METHOD(thread_out_V_user_V_1_ack_in);
    sensitive << ( out_V_user_V_1_state );

    SC_METHOD(thread_out_V_user_V_1_ack_out);
    sensitive << ( out_r_TREADY );

    SC_METHOD(thread_out_V_user_V_1_data_out);
    sensitive << ( out_V_user_V_1_sel );

    SC_METHOD(thread_out_V_user_V_1_sel);
    sensitive << ( out_V_user_V_1_sel_rd );

    SC_METHOD(thread_out_V_user_V_1_vld_in);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_717 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_out_V_user_V_1_vld_out);
    sensitive << ( out_V_user_V_1_state );

    SC_METHOD(thread_out_r_TDATA);
    sensitive << ( out_V_data_V_1_data_out );

    SC_METHOD(thread_out_r_TDATA_blk_n);
    sensitive << ( out_V_data_V_1_state );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_717 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_flatten_reg_717_pp0_iter1_reg );

    SC_METHOD(thread_out_r_TDEST);
    sensitive << ( out_V_dest_V_1_data_out );

    SC_METHOD(thread_out_r_TID);
    sensitive << ( out_V_id_V_1_data_out );

    SC_METHOD(thread_out_r_TKEEP);
    sensitive << ( out_V_keep_V_1_data_out );

    SC_METHOD(thread_out_r_TLAST);
    sensitive << ( out_V_last_V_1_data_out );

    SC_METHOD(thread_out_r_TSTRB);
    sensitive << ( out_V_strb_V_1_data_out );

    SC_METHOD(thread_out_r_TUSER);
    sensitive << ( out_V_user_V_1_data_out );

    SC_METHOD(thread_out_r_TVALID);
    sensitive << ( out_V_dest_V_1_state );

    SC_METHOD(thread_p_Result_1_fu_370_p4);
    sensitive << ( in_V_data_V_0_data_out );

    SC_METHOD(thread_p_Result_s_fu_360_p4);
    sensitive << ( in_V_data_V_0_data_out );

    SC_METHOD(thread_p_s_fu_559_p3);
    sensitive << ( ret_V_4_fu_545_p2 );
    sensitive << ( tmp_4_fu_551_p3 );

    SC_METHOD(thread_ret_V_2_fu_522_p2);
    sensitive << ( lhs_V_fu_514_p1 );
    sensitive << ( rhs_V_fu_518_p1 );

    SC_METHOD(thread_ret_V_3_fu_536_p2);
    sensitive << ( lhs_V_1_fu_528_p1 );
    sensitive << ( rhs_V_1_fu_532_p1 );

    SC_METHOD(thread_ret_V_4_fu_545_p2);
    sensitive << ( ret_V_3_fu_536_p2 );
    sensitive << ( rhs_V_4_cast_fu_542_p1 );

    SC_METHOD(thread_ret_V_fu_388_p2);
    sensitive << ( rhs_V_cast_fu_384_p1 );
    sensitive << ( lhs_V_cast_fu_380_p1 );

    SC_METHOD(thread_rhs_V_1_fu_532_p1);
    sensitive << ( swin_2_0_V_fu_208 );

    SC_METHOD(thread_rhs_V_4_cast_fu_542_p1);
    sensitive << ( swin_2_2_V_reg_726 );

    SC_METHOD(thread_rhs_V_cast_fu_384_p1);
    sensitive << ( p_Result_1_fu_370_p4 );

    SC_METHOD(thread_rhs_V_fu_518_p1);
    sensitive << ( buff1_V_V_dout );

    SC_METHOD(thread_row_mid2_fu_506_p3);
    sensitive << ( row_reg_310 );
    sensitive << ( tmp_s_fu_466_p2 );
    sensitive << ( row_s_fu_480_p2 );

    SC_METHOD(thread_row_s_fu_480_p2);
    sensitive << ( row_reg_310 );

    SC_METHOD(thread_tmp_1_fu_492_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_717 );
    sensitive << ( row_reg_310 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_tmp_2_fu_394_p1);
    sensitive << ( in_V_data_V_0_data_out );

    SC_METHOD(thread_tmp_3_fu_606_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_717 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( col_1_mid2_fu_472_p3 );

    SC_METHOD(thread_tmp_4_fu_551_p3);
    sensitive << ( ret_V_4_fu_545_p2 );

    SC_METHOD(thread_tmp_5_fu_567_p4);
    sensitive << ( p_s_fu_559_p3 );

    SC_METHOD(thread_tmp_5_mid1_fu_486_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_717 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( row_s_fu_480_p2 );

    SC_METHOD(thread_tmp_5_mid2_fu_498_p3);
    sensitive << ( tmp_s_fu_466_p2 );
    sensitive << ( tmp_5_mid1_fu_486_p2 );
    sensitive << ( tmp_1_fu_492_p2 );

    SC_METHOD(thread_tmp_6_fu_583_p1);
    sensitive << ( p_s_fu_559_p3 );

    SC_METHOD(thread_tmp_9_fu_587_p3);
    sensitive << ( icmp_fu_577_p2 );
    sensitive << ( tmp_6_fu_583_p1 );

    SC_METHOD(thread_tmp_data_V_fu_595_p4);
    sensitive << ( tmp_9_fu_587_p3 );

    SC_METHOD(thread_tmp_fu_332_p2);
    sensitive << ( tmp_fu_332_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( buff1_V_V_full_n );
    sensitive << ( buff2_V_V_full_n );
    sensitive << ( col_reg_288 );

    SC_METHOD(thread_tmp_last_V_fu_612_p2);
    sensitive << ( tmp_5_mid2_fu_498_p3 );
    sensitive << ( tmp_3_fu_606_p2 );

    SC_METHOD(thread_tmp_s_fu_466_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_717 );
    sensitive << ( col_1_reg_321 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( out_V_data_V_1_ack_in );
    sensitive << ( out_V_data_V_1_state );
    sensitive << ( out_V_keep_V_1_ack_in );
    sensitive << ( out_V_keep_V_1_state );
    sensitive << ( out_V_strb_V_1_ack_in );
    sensitive << ( out_V_strb_V_1_state );
    sensitive << ( out_V_user_V_1_ack_in );
    sensitive << ( out_V_user_V_1_state );
    sensitive << ( out_V_last_V_1_ack_in );
    sensitive << ( out_V_last_V_1_state );
    sensitive << ( out_V_id_V_1_ack_in );
    sensitive << ( out_V_id_V_1_state );
    sensitive << ( out_V_dest_V_1_ack_in );
    sensitive << ( out_V_dest_V_1_state );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_fu_332_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( buff1_V_V_full_n );
    sensitive << ( buff2_V_V_full_n );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_CS_fsm_state6 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "0001";
    in_V_data_V_0_sel_rd = SC_LOGIC_0;
    in_V_data_V_0_sel_wr = SC_LOGIC_0;
    in_V_data_V_0_state = "00";
    in_V_dest_V_0_state = "00";
    out_V_data_V_1_sel_rd = SC_LOGIC_0;
    out_V_data_V_1_sel_wr = SC_LOGIC_0;
    out_V_data_V_1_state = "00";
    out_V_keep_V_1_sel_rd = SC_LOGIC_0;
    out_V_keep_V_1_state = "00";
    out_V_strb_V_1_sel_rd = SC_LOGIC_0;
    out_V_strb_V_1_state = "00";
    out_V_user_V_1_sel_rd = SC_LOGIC_0;
    out_V_user_V_1_state = "00";
    out_V_last_V_1_sel_rd = SC_LOGIC_0;
    out_V_last_V_1_sel_wr = SC_LOGIC_0;
    out_V_last_V_1_state = "00";
    out_V_id_V_1_sel_rd = SC_LOGIC_0;
    out_V_id_V_1_state = "00";
    out_V_dest_V_1_sel_rd = SC_LOGIC_0;
    out_V_dest_V_1_state = "00";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "img_filter_hw_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, in_r_TDATA, "(port)in_r_TDATA");
    sc_trace(mVcdFile, in_r_TVALID, "(port)in_r_TVALID");
    sc_trace(mVcdFile, in_r_TREADY, "(port)in_r_TREADY");
    sc_trace(mVcdFile, in_r_TKEEP, "(port)in_r_TKEEP");
    sc_trace(mVcdFile, in_r_TSTRB, "(port)in_r_TSTRB");
    sc_trace(mVcdFile, in_r_TUSER, "(port)in_r_TUSER");
    sc_trace(mVcdFile, in_r_TLAST, "(port)in_r_TLAST");
    sc_trace(mVcdFile, in_r_TID, "(port)in_r_TID");
    sc_trace(mVcdFile, in_r_TDEST, "(port)in_r_TDEST");
    sc_trace(mVcdFile, out_r_TDATA, "(port)out_r_TDATA");
    sc_trace(mVcdFile, out_r_TVALID, "(port)out_r_TVALID");
    sc_trace(mVcdFile, out_r_TREADY, "(port)out_r_TREADY");
    sc_trace(mVcdFile, out_r_TKEEP, "(port)out_r_TKEEP");
    sc_trace(mVcdFile, out_r_TSTRB, "(port)out_r_TSTRB");
    sc_trace(mVcdFile, out_r_TUSER, "(port)out_r_TUSER");
    sc_trace(mVcdFile, out_r_TLAST, "(port)out_r_TLAST");
    sc_trace(mVcdFile, out_r_TID, "(port)out_r_TID");
    sc_trace(mVcdFile, out_r_TDEST, "(port)out_r_TDEST");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, in_V_data_V_0_data_out, "in_V_data_V_0_data_out");
    sc_trace(mVcdFile, in_V_data_V_0_vld_in, "in_V_data_V_0_vld_in");
    sc_trace(mVcdFile, in_V_data_V_0_vld_out, "in_V_data_V_0_vld_out");
    sc_trace(mVcdFile, in_V_data_V_0_ack_in, "in_V_data_V_0_ack_in");
    sc_trace(mVcdFile, in_V_data_V_0_ack_out, "in_V_data_V_0_ack_out");
    sc_trace(mVcdFile, in_V_data_V_0_payload_A, "in_V_data_V_0_payload_A");
    sc_trace(mVcdFile, in_V_data_V_0_payload_B, "in_V_data_V_0_payload_B");
    sc_trace(mVcdFile, in_V_data_V_0_sel_rd, "in_V_data_V_0_sel_rd");
    sc_trace(mVcdFile, in_V_data_V_0_sel_wr, "in_V_data_V_0_sel_wr");
    sc_trace(mVcdFile, in_V_data_V_0_sel, "in_V_data_V_0_sel");
    sc_trace(mVcdFile, in_V_data_V_0_load_A, "in_V_data_V_0_load_A");
    sc_trace(mVcdFile, in_V_data_V_0_load_B, "in_V_data_V_0_load_B");
    sc_trace(mVcdFile, in_V_data_V_0_state, "in_V_data_V_0_state");
    sc_trace(mVcdFile, in_V_data_V_0_state_cmp_full, "in_V_data_V_0_state_cmp_full");
    sc_trace(mVcdFile, in_V_dest_V_0_vld_in, "in_V_dest_V_0_vld_in");
    sc_trace(mVcdFile, in_V_dest_V_0_ack_out, "in_V_dest_V_0_ack_out");
    sc_trace(mVcdFile, in_V_dest_V_0_state, "in_V_dest_V_0_state");
    sc_trace(mVcdFile, out_V_data_V_1_data_out, "out_V_data_V_1_data_out");
    sc_trace(mVcdFile, out_V_data_V_1_vld_in, "out_V_data_V_1_vld_in");
    sc_trace(mVcdFile, out_V_data_V_1_vld_out, "out_V_data_V_1_vld_out");
    sc_trace(mVcdFile, out_V_data_V_1_ack_in, "out_V_data_V_1_ack_in");
    sc_trace(mVcdFile, out_V_data_V_1_ack_out, "out_V_data_V_1_ack_out");
    sc_trace(mVcdFile, out_V_data_V_1_payload_A, "out_V_data_V_1_payload_A");
    sc_trace(mVcdFile, out_V_data_V_1_payload_B, "out_V_data_V_1_payload_B");
    sc_trace(mVcdFile, out_V_data_V_1_sel_rd, "out_V_data_V_1_sel_rd");
    sc_trace(mVcdFile, out_V_data_V_1_sel_wr, "out_V_data_V_1_sel_wr");
    sc_trace(mVcdFile, out_V_data_V_1_sel, "out_V_data_V_1_sel");
    sc_trace(mVcdFile, out_V_data_V_1_load_A, "out_V_data_V_1_load_A");
    sc_trace(mVcdFile, out_V_data_V_1_load_B, "out_V_data_V_1_load_B");
    sc_trace(mVcdFile, out_V_data_V_1_state, "out_V_data_V_1_state");
    sc_trace(mVcdFile, out_V_data_V_1_state_cmp_full, "out_V_data_V_1_state_cmp_full");
    sc_trace(mVcdFile, out_V_keep_V_1_data_out, "out_V_keep_V_1_data_out");
    sc_trace(mVcdFile, out_V_keep_V_1_vld_in, "out_V_keep_V_1_vld_in");
    sc_trace(mVcdFile, out_V_keep_V_1_vld_out, "out_V_keep_V_1_vld_out");
    sc_trace(mVcdFile, out_V_keep_V_1_ack_in, "out_V_keep_V_1_ack_in");
    sc_trace(mVcdFile, out_V_keep_V_1_ack_out, "out_V_keep_V_1_ack_out");
    sc_trace(mVcdFile, out_V_keep_V_1_sel_rd, "out_V_keep_V_1_sel_rd");
    sc_trace(mVcdFile, out_V_keep_V_1_sel, "out_V_keep_V_1_sel");
    sc_trace(mVcdFile, out_V_keep_V_1_state, "out_V_keep_V_1_state");
    sc_trace(mVcdFile, out_V_strb_V_1_data_out, "out_V_strb_V_1_data_out");
    sc_trace(mVcdFile, out_V_strb_V_1_vld_in, "out_V_strb_V_1_vld_in");
    sc_trace(mVcdFile, out_V_strb_V_1_vld_out, "out_V_strb_V_1_vld_out");
    sc_trace(mVcdFile, out_V_strb_V_1_ack_in, "out_V_strb_V_1_ack_in");
    sc_trace(mVcdFile, out_V_strb_V_1_ack_out, "out_V_strb_V_1_ack_out");
    sc_trace(mVcdFile, out_V_strb_V_1_sel_rd, "out_V_strb_V_1_sel_rd");
    sc_trace(mVcdFile, out_V_strb_V_1_sel, "out_V_strb_V_1_sel");
    sc_trace(mVcdFile, out_V_strb_V_1_state, "out_V_strb_V_1_state");
    sc_trace(mVcdFile, out_V_user_V_1_data_out, "out_V_user_V_1_data_out");
    sc_trace(mVcdFile, out_V_user_V_1_vld_in, "out_V_user_V_1_vld_in");
    sc_trace(mVcdFile, out_V_user_V_1_vld_out, "out_V_user_V_1_vld_out");
    sc_trace(mVcdFile, out_V_user_V_1_ack_in, "out_V_user_V_1_ack_in");
    sc_trace(mVcdFile, out_V_user_V_1_ack_out, "out_V_user_V_1_ack_out");
    sc_trace(mVcdFile, out_V_user_V_1_sel_rd, "out_V_user_V_1_sel_rd");
    sc_trace(mVcdFile, out_V_user_V_1_sel, "out_V_user_V_1_sel");
    sc_trace(mVcdFile, out_V_user_V_1_state, "out_V_user_V_1_state");
    sc_trace(mVcdFile, out_V_last_V_1_data_out, "out_V_last_V_1_data_out");
    sc_trace(mVcdFile, out_V_last_V_1_vld_in, "out_V_last_V_1_vld_in");
    sc_trace(mVcdFile, out_V_last_V_1_vld_out, "out_V_last_V_1_vld_out");
    sc_trace(mVcdFile, out_V_last_V_1_ack_in, "out_V_last_V_1_ack_in");
    sc_trace(mVcdFile, out_V_last_V_1_ack_out, "out_V_last_V_1_ack_out");
    sc_trace(mVcdFile, out_V_last_V_1_payload_A, "out_V_last_V_1_payload_A");
    sc_trace(mVcdFile, out_V_last_V_1_payload_B, "out_V_last_V_1_payload_B");
    sc_trace(mVcdFile, out_V_last_V_1_sel_rd, "out_V_last_V_1_sel_rd");
    sc_trace(mVcdFile, out_V_last_V_1_sel_wr, "out_V_last_V_1_sel_wr");
    sc_trace(mVcdFile, out_V_last_V_1_sel, "out_V_last_V_1_sel");
    sc_trace(mVcdFile, out_V_last_V_1_load_A, "out_V_last_V_1_load_A");
    sc_trace(mVcdFile, out_V_last_V_1_load_B, "out_V_last_V_1_load_B");
    sc_trace(mVcdFile, out_V_last_V_1_state, "out_V_last_V_1_state");
    sc_trace(mVcdFile, out_V_last_V_1_state_cmp_full, "out_V_last_V_1_state_cmp_full");
    sc_trace(mVcdFile, out_V_id_V_1_data_out, "out_V_id_V_1_data_out");
    sc_trace(mVcdFile, out_V_id_V_1_vld_in, "out_V_id_V_1_vld_in");
    sc_trace(mVcdFile, out_V_id_V_1_vld_out, "out_V_id_V_1_vld_out");
    sc_trace(mVcdFile, out_V_id_V_1_ack_in, "out_V_id_V_1_ack_in");
    sc_trace(mVcdFile, out_V_id_V_1_ack_out, "out_V_id_V_1_ack_out");
    sc_trace(mVcdFile, out_V_id_V_1_sel_rd, "out_V_id_V_1_sel_rd");
    sc_trace(mVcdFile, out_V_id_V_1_sel, "out_V_id_V_1_sel");
    sc_trace(mVcdFile, out_V_id_V_1_state, "out_V_id_V_1_state");
    sc_trace(mVcdFile, out_V_dest_V_1_data_out, "out_V_dest_V_1_data_out");
    sc_trace(mVcdFile, out_V_dest_V_1_vld_in, "out_V_dest_V_1_vld_in");
    sc_trace(mVcdFile, out_V_dest_V_1_vld_out, "out_V_dest_V_1_vld_out");
    sc_trace(mVcdFile, out_V_dest_V_1_ack_in, "out_V_dest_V_1_ack_in");
    sc_trace(mVcdFile, out_V_dest_V_1_ack_out, "out_V_dest_V_1_ack_out");
    sc_trace(mVcdFile, out_V_dest_V_1_sel_rd, "out_V_dest_V_1_sel_rd");
    sc_trace(mVcdFile, out_V_dest_V_1_sel, "out_V_dest_V_1_sel");
    sc_trace(mVcdFile, out_V_dest_V_1_state, "out_V_dest_V_1_state");
    sc_trace(mVcdFile, in_r_TDATA_blk_n, "in_r_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, exitcond_flatten_fu_344_p2, "exitcond_flatten_fu_344_p2");
    sc_trace(mVcdFile, out_r_TDATA_blk_n, "out_r_TDATA_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, exitcond_flatten_reg_717, "exitcond_flatten_reg_717");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, exitcond_flatten_reg_717_pp0_iter1_reg, "exitcond_flatten_reg_717_pp0_iter1_reg");
    sc_trace(mVcdFile, indvar_flatten_reg_299, "indvar_flatten_reg_299");
    sc_trace(mVcdFile, row_reg_310, "row_reg_310");
    sc_trace(mVcdFile, col_1_reg_321, "col_1_reg_321");
    sc_trace(mVcdFile, tmp_fu_332_p2, "tmp_fu_332_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, buff1_V_V_din, "buff1_V_V_din");
    sc_trace(mVcdFile, buff1_V_V_full_n, "buff1_V_V_full_n");
    sc_trace(mVcdFile, buff1_V_V_write, "buff1_V_V_write");
    sc_trace(mVcdFile, buff2_V_V_din, "buff2_V_V_din");
    sc_trace(mVcdFile, buff2_V_V_full_n, "buff2_V_V_full_n");
    sc_trace(mVcdFile, buff2_V_V_write, "buff2_V_V_write");
    sc_trace(mVcdFile, ap_block_state2, "ap_block_state2");
    sc_trace(mVcdFile, col_2_fu_338_p2, "col_2_fu_338_p2");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter0, "ap_block_state3_pp0_stage0_iter0");
    sc_trace(mVcdFile, buff1_V_V_dout, "buff1_V_V_dout");
    sc_trace(mVcdFile, buff1_V_V_empty_n, "buff1_V_V_empty_n");
    sc_trace(mVcdFile, buff1_V_V_read, "buff1_V_V_read");
    sc_trace(mVcdFile, buff2_V_V_dout, "buff2_V_V_dout");
    sc_trace(mVcdFile, buff2_V_V_empty_n, "buff2_V_V_empty_n");
    sc_trace(mVcdFile, buff2_V_V_read, "buff2_V_V_read");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter1, "ap_block_state4_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_io, "ap_block_state4_io");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter2, "ap_block_state5_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state5_io, "ap_block_state5_io");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, indvar_flatten_next_fu_350_p2, "indvar_flatten_next_fu_350_p2");
    sc_trace(mVcdFile, swin_2_2_V_reg_726, "swin_2_2_V_reg_726");
    sc_trace(mVcdFile, row_mid2_fu_506_p3, "row_mid2_fu_506_p3");
    sc_trace(mVcdFile, tmp_data_V_fu_595_p4, "tmp_data_V_fu_595_p4");
    sc_trace(mVcdFile, tmp_last_V_fu_612_p2, "tmp_last_V_fu_612_p2");
    sc_trace(mVcdFile, col_3_fu_619_p2, "col_3_fu_619_p2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter1_state4, "ap_condition_pp0_exit_iter1_state4");
    sc_trace(mVcdFile, col_reg_288, "col_reg_288");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, swin_V_0_1_1_fu_184, "swin_V_0_1_1_fu_184");
    sc_trace(mVcdFile, swin_0_1_V_fu_188, "swin_0_1_V_fu_188");
    sc_trace(mVcdFile, tmp_V_fu_192, "tmp_V_fu_192");
    sc_trace(mVcdFile, swin_1_0_V_fu_196, "swin_1_0_V_fu_196");
    sc_trace(mVcdFile, swin_1_1_V_fu_200, "swin_1_1_V_fu_200");
    sc_trace(mVcdFile, tmp_V_1_fu_204, "tmp_V_1_fu_204");
    sc_trace(mVcdFile, swin_2_0_V_fu_208, "swin_2_0_V_fu_208");
    sc_trace(mVcdFile, swin_2_1_V_fu_212, "swin_2_1_V_fu_212");
    sc_trace(mVcdFile, p_Result_s_fu_360_p4, "p_Result_s_fu_360_p4");
    sc_trace(mVcdFile, p_Result_1_fu_370_p4, "p_Result_1_fu_370_p4");
    sc_trace(mVcdFile, rhs_V_cast_fu_384_p1, "rhs_V_cast_fu_384_p1");
    sc_trace(mVcdFile, lhs_V_cast_fu_380_p1, "lhs_V_cast_fu_380_p1");
    sc_trace(mVcdFile, ret_V_fu_388_p2, "ret_V_fu_388_p2");
    sc_trace(mVcdFile, tmp_2_fu_394_p1, "tmp_2_fu_394_p1");
    sc_trace(mVcdFile, grp_fu_639_p3, "grp_fu_639_p3");
    sc_trace(mVcdFile, tmp_s_fu_466_p2, "tmp_s_fu_466_p2");
    sc_trace(mVcdFile, row_s_fu_480_p2, "row_s_fu_480_p2");
    sc_trace(mVcdFile, tmp_5_mid1_fu_486_p2, "tmp_5_mid1_fu_486_p2");
    sc_trace(mVcdFile, tmp_1_fu_492_p2, "tmp_1_fu_492_p2");
    sc_trace(mVcdFile, lhs_V_fu_514_p1, "lhs_V_fu_514_p1");
    sc_trace(mVcdFile, rhs_V_fu_518_p1, "rhs_V_fu_518_p1");
    sc_trace(mVcdFile, ret_V_2_fu_522_p2, "ret_V_2_fu_522_p2");
    sc_trace(mVcdFile, lhs_V_1_fu_528_p1, "lhs_V_1_fu_528_p1");
    sc_trace(mVcdFile, rhs_V_1_fu_532_p1, "rhs_V_1_fu_532_p1");
    sc_trace(mVcdFile, ret_V_3_fu_536_p2, "ret_V_3_fu_536_p2");
    sc_trace(mVcdFile, rhs_V_4_cast_fu_542_p1, "rhs_V_4_cast_fu_542_p1");
    sc_trace(mVcdFile, ret_V_4_fu_545_p2, "ret_V_4_fu_545_p2");
    sc_trace(mVcdFile, tmp_4_fu_551_p3, "tmp_4_fu_551_p3");
    sc_trace(mVcdFile, p_s_fu_559_p3, "p_s_fu_559_p3");
    sc_trace(mVcdFile, tmp_5_fu_567_p4, "tmp_5_fu_567_p4");
    sc_trace(mVcdFile, icmp_fu_577_p2, "icmp_fu_577_p2");
    sc_trace(mVcdFile, tmp_6_fu_583_p1, "tmp_6_fu_583_p1");
    sc_trace(mVcdFile, tmp_9_fu_587_p3, "tmp_9_fu_587_p3");
    sc_trace(mVcdFile, col_1_mid2_fu_472_p3, "col_1_mid2_fu_472_p3");
    sc_trace(mVcdFile, tmp_5_mid2_fu_498_p3, "tmp_5_mid2_fu_498_p3");
    sc_trace(mVcdFile, tmp_3_fu_606_p2, "tmp_3_fu_606_p2");
    sc_trace(mVcdFile, grp_fu_639_p0, "grp_fu_639_p0");
    sc_trace(mVcdFile, grp_fu_639_p1, "grp_fu_639_p1");
    sc_trace(mVcdFile, grp_fu_639_p2, "grp_fu_639_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_block_state6, "ap_block_state6");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, grp_fu_639_p00, "grp_fu_639_p00");
    sc_trace(mVcdFile, grp_fu_639_p10, "grp_fu_639_p10");
#endif

    }
    mHdltvinHandle.open("img_filter_hw.hdltvin.dat");
    mHdltvoutHandle.open("img_filter_hw.hdltvout.dat");
}

img_filter_hw::~img_filter_hw() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete img_filter_hw_AXILiteS_s_axi_U;
    delete img_filter_hw_am_bkb_U1;
    delete buff1_V_V_fifo_U;
    delete buff2_V_V_fifo_U;
}

void img_filter_hw::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void img_filter_hw::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_flatten_fu_344_p2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    !((esl_seteq<1,1,1>(ap_const_logic_0, buff1_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_332_p2.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_332_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, buff2_V_V_full_n.read()))) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_332_p2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                     !((esl_seteq<1,1,1>(ap_const_logic_0, buff1_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_332_p2.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_332_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, buff2_V_V_full_n.read()))) && 
                     esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_332_p2.read())) || 
                    (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter1_state4.read())))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter1_state4.read()))) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter0.read();
        } else if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    !((esl_seteq<1,1,1>(ap_const_logic_0, buff1_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_332_p2.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_332_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, buff2_V_V_full_n.read()))) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_332_p2.read()))) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_0, buff1_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_332_p2.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_332_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, buff2_V_V_full_n.read()))) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_332_p2.read()))) {
        col_1_reg_321 = ap_const_lv10_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_717.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        col_1_reg_321 = col_3_fu_619_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        col_reg_288 = ap_const_lv10_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_332_p2.read()) && 
                !((esl_seteq<1,1,1>(ap_const_logic_0, buff1_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_332_p2.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_332_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, buff2_V_V_full_n.read()))))) {
        col_reg_288 = col_2_fu_338_p2.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_V_data_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, in_V_data_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, in_V_data_V_0_vld_out.read()))) {
            in_V_data_V_0_sel_rd =  (sc_logic) (~in_V_data_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_V_data_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, in_V_data_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, in_V_data_V_0_ack_in.read()))) {
            in_V_data_V_0_sel_wr =  (sc_logic) (~in_V_data_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_V_data_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, in_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, in_V_data_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(in_V_data_V_0_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, in_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(in_V_data_V_0_state.read(), ap_const_lv2_2)))) {
            in_V_data_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, in_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(in_V_data_V_0_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, in_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(in_V_data_V_0_state.read(), ap_const_lv2_1)))) {
            in_V_data_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(in_V_data_V_0_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, in_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(in_V_data_V_0_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(in_V_data_V_0_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, in_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_V_data_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, in_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, in_V_data_V_0_ack_out.read()))))) {
            in_V_data_V_0_state = ap_const_lv2_3;
        } else {
            in_V_data_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_V_dest_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, in_V_dest_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, in_V_dest_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, in_V_dest_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, in_V_dest_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, in_V_dest_V_0_state.read())))) {
            in_V_dest_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_V_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, in_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, in_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, in_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, in_V_dest_V_0_state.read())))) {
            in_V_dest_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_V_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, in_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, in_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, in_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, in_V_dest_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, in_V_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_V_dest_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, in_V_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, in_V_dest_V_0_ack_out.read()))))) {
            in_V_dest_V_0_state = ap_const_lv2_3;
        } else {
            in_V_dest_V_0_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_0, buff1_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_332_p2.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_332_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, buff2_V_V_full_n.read()))) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_332_p2.read()))) {
        indvar_flatten_reg_299 = ap_const_lv19_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_344_p2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        indvar_flatten_reg_299 = indvar_flatten_next_fu_350_p2.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_V_data_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_V_data_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_V_data_V_1_vld_out.read()))) {
            out_V_data_V_1_sel_rd =  (sc_logic) (~out_V_data_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_V_data_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_V_data_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_V_data_V_1_ack_in.read()))) {
            out_V_data_V_1_sel_wr =  (sc_logic) (~out_V_data_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_V_data_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_V_data_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_V_data_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_V_data_V_1_state.read())))) {
            out_V_data_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_V_data_V_1_state.read())))) {
            out_V_data_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_V_data_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_V_data_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_V_data_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_V_data_V_1_ack_out.read()))))) {
            out_V_data_V_1_state = ap_const_lv2_3;
        } else {
            out_V_data_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_V_dest_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_V_dest_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_V_dest_V_1_vld_out.read()))) {
            out_V_dest_V_1_sel_rd =  (sc_logic) (~out_V_dest_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_V_dest_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_V_dest_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_V_dest_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_V_dest_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_V_dest_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_V_dest_V_1_state.read())))) {
            out_V_dest_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_V_dest_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_V_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_V_dest_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_V_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_V_dest_V_1_state.read())))) {
            out_V_dest_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_V_dest_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_V_dest_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_V_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_V_dest_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_V_dest_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_V_dest_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_V_dest_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_V_dest_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_V_dest_V_1_ack_out.read()))))) {
            out_V_dest_V_1_state = ap_const_lv2_3;
        } else {
            out_V_dest_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_V_id_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_V_id_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_V_id_V_1_vld_out.read()))) {
            out_V_id_V_1_sel_rd =  (sc_logic) (~out_V_id_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_V_id_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_V_id_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_V_id_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_V_id_V_1_state.read())))) {
            out_V_id_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_V_id_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_V_id_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_V_id_V_1_state.read())))) {
            out_V_id_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_V_id_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_V_id_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_V_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_V_id_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_V_id_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_V_id_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_V_id_V_1_ack_out.read()))))) {
            out_V_id_V_1_state = ap_const_lv2_3;
        } else {
            out_V_id_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_V_keep_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_V_keep_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_V_keep_V_1_vld_out.read()))) {
            out_V_keep_V_1_sel_rd =  (sc_logic) (~out_V_keep_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_V_keep_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_V_keep_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_V_keep_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_V_keep_V_1_state.read())))) {
            out_V_keep_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_V_keep_V_1_state.read())))) {
            out_V_keep_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_V_keep_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_V_keep_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_V_keep_V_1_ack_out.read()))))) {
            out_V_keep_V_1_state = ap_const_lv2_3;
        } else {
            out_V_keep_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_V_last_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_V_last_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_V_last_V_1_vld_out.read()))) {
            out_V_last_V_1_sel_rd =  (sc_logic) (~out_V_last_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_V_last_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_V_last_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_V_last_V_1_ack_in.read()))) {
            out_V_last_V_1_sel_wr =  (sc_logic) (~out_V_last_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_V_last_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_V_last_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_V_last_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_V_last_V_1_state.read())))) {
            out_V_last_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_V_last_V_1_state.read())))) {
            out_V_last_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_V_last_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_V_last_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_V_last_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_V_last_V_1_ack_out.read()))))) {
            out_V_last_V_1_state = ap_const_lv2_3;
        } else {
            out_V_last_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_V_strb_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_V_strb_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_V_strb_V_1_vld_out.read()))) {
            out_V_strb_V_1_sel_rd =  (sc_logic) (~out_V_strb_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_V_strb_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_V_strb_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_V_strb_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_V_strb_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_V_strb_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_V_strb_V_1_state.read())))) {
            out_V_strb_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_V_strb_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_V_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_V_strb_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_V_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_V_strb_V_1_state.read())))) {
            out_V_strb_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_V_strb_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_V_strb_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_V_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_V_strb_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_V_strb_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_V_strb_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_V_strb_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_V_strb_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_V_strb_V_1_ack_out.read()))))) {
            out_V_strb_V_1_state = ap_const_lv2_3;
        } else {
            out_V_strb_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_V_user_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_V_user_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_V_user_V_1_vld_out.read()))) {
            out_V_user_V_1_sel_rd =  (sc_logic) (~out_V_user_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_V_user_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_V_user_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_V_user_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_V_user_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_V_user_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_V_user_V_1_state.read())))) {
            out_V_user_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_V_user_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_V_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_V_user_V_1_state.read())))) {
            out_V_user_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_V_user_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_V_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_V_user_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_V_user_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_V_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_V_user_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_V_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_V_user_V_1_ack_out.read()))))) {
            out_V_user_V_1_state = ap_const_lv2_3;
        } else {
            out_V_user_V_1_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_0, buff1_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_332_p2.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_332_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, buff2_V_V_full_n.read()))) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_332_p2.read()))) {
        row_reg_310 = ap_const_lv9_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_717.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        row_reg_310 = row_mid2_fu_506_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond_flatten_reg_717 = exitcond_flatten_fu_344_p2.read();
        exitcond_flatten_reg_717_pp0_iter1_reg = exitcond_flatten_reg_717.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_V_data_V_0_load_A.read())) {
        in_V_data_V_0_payload_A = in_r_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_V_data_V_0_load_B.read())) {
        in_V_data_V_0_payload_B = in_r_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_V_data_V_1_load_A.read())) {
        out_V_data_V_1_payload_A = tmp_data_V_fu_595_p4.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_V_data_V_1_load_B.read())) {
        out_V_data_V_1_payload_B = tmp_data_V_fu_595_p4.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_V_last_V_1_load_A.read())) {
        out_V_last_V_1_payload_A = tmp_last_V_fu_612_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_V_last_V_1_load_B.read())) {
        out_V_last_V_1_payload_B = tmp_last_V_fu_612_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_717.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        swin_0_1_V_fu_188 = buff1_V_V_dout.read();
        swin_1_1_V_fu_200 = buff2_V_V_dout.read();
        swin_2_1_V_fu_212 = swin_2_2_V_reg_726.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        swin_1_0_V_fu_196 = swin_1_1_V_fu_200.read();
        swin_2_0_V_fu_208 = swin_2_1_V_fu_212.read();
        swin_V_0_1_1_fu_184 = swin_0_1_V_fu_188.read();
        tmp_V_1_fu_204 = swin_2_0_V_fu_208.read();
        tmp_V_fu_192 = swin_1_0_V_fu_196.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_344_p2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        swin_2_2_V_reg_726 = grp_fu_639_p3.read().range(19, 12);
    }
}

void img_filter_hw::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[2];
}

void img_filter_hw::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void img_filter_hw::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void img_filter_hw::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[3];
}

void img_filter_hw::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void img_filter_hw::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_344_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_717.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, buff1_V_V_empty_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_717.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, buff1_V_V_full_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_717.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, buff2_V_V_empty_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_717.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, buff2_V_V_full_n.read())))));
}

void img_filter_hw::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_344_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_717.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, buff1_V_V_empty_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_717.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, buff1_V_V_full_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_717.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, buff2_V_V_empty_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_717.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, buff2_V_V_full_n.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state5_io.read())));
}

void img_filter_hw::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_344_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_V_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_717.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, buff1_V_V_empty_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_717.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, buff1_V_V_full_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_717.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, buff2_V_V_empty_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_717.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, buff2_V_V_full_n.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state5_io.read())));
}

void img_filter_hw::thread_ap_block_state2() {
    ap_block_state2 = ((esl_seteq<1,1,1>(ap_const_logic_0, buff1_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_332_p2.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_332_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, buff2_V_V_full_n.read())));
}

void img_filter_hw::thread_ap_block_state3_pp0_stage0_iter0() {
    ap_block_state3_pp0_stage0_iter0 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_344_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_V_data_V_0_vld_out.read()));
}

void img_filter_hw::thread_ap_block_state4_io() {
    ap_block_state4_io = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_717.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_V_data_V_1_ack_in.read()));
}

void img_filter_hw::thread_ap_block_state4_pp0_stage0_iter1() {
    ap_block_state4_pp0_stage0_iter1 = ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_717.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, buff1_V_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_717.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, buff1_V_V_full_n.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_717.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, buff2_V_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_717.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, buff2_V_V_full_n.read())));
}

void img_filter_hw::thread_ap_block_state5_io() {
    ap_block_state5_io = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_717_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_V_data_V_1_ack_in.read()));
}

void img_filter_hw::thread_ap_block_state5_pp0_stage0_iter2() {
    ap_block_state5_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void img_filter_hw::thread_ap_block_state6() {
    ap_block_state6 = (esl_seteq<1,1,1>(ap_const_logic_0, out_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_dest_V_1_ack_in.read()));
}

void img_filter_hw::thread_ap_condition_pp0_exit_iter1_state4() {
    if ((esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0))) {
        ap_condition_pp0_exit_iter1_state4 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter1_state4 = ap_const_logic_0;
    }
}

void img_filter_hw::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, out_V_data_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, out_V_keep_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, out_V_strb_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, out_V_user_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, out_V_last_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, out_V_dest_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, out_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_dest_V_1_ack_in.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void img_filter_hw::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void img_filter_hw::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void img_filter_hw::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void img_filter_hw::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, out_V_data_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, out_V_keep_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, out_V_strb_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, out_V_user_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, out_V_last_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, out_V_dest_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, out_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_dest_V_1_ack_in.read())))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void img_filter_hw::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void img_filter_hw::thread_buff1_V_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_717.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        buff1_V_V_din = tmp_V_fu_192.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_332_p2.read()) && 
                !((esl_seteq<1,1,1>(ap_const_logic_0, buff1_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_332_p2.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_332_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, buff2_V_V_full_n.read()))))) {
        buff1_V_V_din = ap_const_lv8_0;
    } else {
        buff1_V_V_din = "XXXXXXXX";
    }
}

void img_filter_hw::thread_buff1_V_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_717.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        buff1_V_V_read = ap_const_logic_1;
    } else {
        buff1_V_V_read = ap_const_logic_0;
    }
}

void img_filter_hw::thread_buff1_V_V_write() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_717.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_332_p2.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_0, buff1_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_332_p2.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_332_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, buff2_V_V_full_n.read())))))) {
        buff1_V_V_write = ap_const_logic_1;
    } else {
        buff1_V_V_write = ap_const_logic_0;
    }
}

void img_filter_hw::thread_buff2_V_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_717.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        buff2_V_V_din = tmp_V_1_fu_204.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_332_p2.read()) && 
                !((esl_seteq<1,1,1>(ap_const_logic_0, buff1_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_332_p2.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_332_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, buff2_V_V_full_n.read()))))) {
        buff2_V_V_din = ap_const_lv8_0;
    } else {
        buff2_V_V_din = "XXXXXXXX";
    }
}

void img_filter_hw::thread_buff2_V_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_717.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        buff2_V_V_read = ap_const_logic_1;
    } else {
        buff2_V_V_read = ap_const_logic_0;
    }
}

void img_filter_hw::thread_buff2_V_V_write() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_717.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_332_p2.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_0, buff1_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_332_p2.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_332_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, buff2_V_V_full_n.read())))))) {
        buff2_V_V_write = ap_const_logic_1;
    } else {
        buff2_V_V_write = ap_const_logic_0;
    }
}

void img_filter_hw::thread_col_1_mid2_fu_472_p3() {
    col_1_mid2_fu_472_p3 = (!tmp_s_fu_466_p2.read()[0].is_01())? sc_lv<10>(): ((tmp_s_fu_466_p2.read()[0].to_bool())? ap_const_lv10_0: col_1_reg_321.read());
}

void img_filter_hw::thread_col_2_fu_338_p2() {
    col_2_fu_338_p2 = (!col_reg_288.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(col_reg_288.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void img_filter_hw::thread_col_3_fu_619_p2() {
    col_3_fu_619_p2 = (!ap_const_lv10_1.is_01() || !col_1_mid2_fu_472_p3.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_1) + sc_biguint<10>(col_1_mid2_fu_472_p3.read()));
}

void img_filter_hw::thread_exitcond_flatten_fu_344_p2() {
    exitcond_flatten_fu_344_p2 = (!indvar_flatten_reg_299.read().is_01() || !ap_const_lv19_4B000.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_299.read() == ap_const_lv19_4B000);
}

void img_filter_hw::thread_grp_fu_639_p0() {
    grp_fu_639_p0 =  (sc_lv<9>) (grp_fu_639_p00.read());
}

void img_filter_hw::thread_grp_fu_639_p00() {
    grp_fu_639_p00 = esl_zext<10,9>(ret_V_fu_388_p2.read());
}

void img_filter_hw::thread_grp_fu_639_p1() {
    grp_fu_639_p1 =  (sc_lv<8>) (grp_fu_639_p10.read());
}

void img_filter_hw::thread_grp_fu_639_p10() {
    grp_fu_639_p10 = esl_zext<10,8>(tmp_2_fu_394_p1.read());
}

void img_filter_hw::thread_grp_fu_639_p2() {
    grp_fu_639_p2 =  (sc_lv<12>) (ap_const_lv22_556);
}

void img_filter_hw::thread_icmp_fu_577_p2() {
    icmp_fu_577_p2 = (!tmp_5_fu_567_p4.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(tmp_5_fu_567_p4.read() == ap_const_lv2_1);
}

void img_filter_hw::thread_in_V_data_V_0_ack_in() {
    in_V_data_V_0_ack_in = in_V_data_V_0_state.read()[1];
}

void img_filter_hw::thread_in_V_data_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_344_p2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        in_V_data_V_0_ack_out = ap_const_logic_1;
    } else {
        in_V_data_V_0_ack_out = ap_const_logic_0;
    }
}

void img_filter_hw::thread_in_V_data_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_V_data_V_0_sel.read())) {
        in_V_data_V_0_data_out = in_V_data_V_0_payload_B.read();
    } else {
        in_V_data_V_0_data_out = in_V_data_V_0_payload_A.read();
    }
}

void img_filter_hw::thread_in_V_data_V_0_load_A() {
    in_V_data_V_0_load_A = (in_V_data_V_0_state_cmp_full.read() & ~in_V_data_V_0_sel_wr.read());
}

void img_filter_hw::thread_in_V_data_V_0_load_B() {
    in_V_data_V_0_load_B = (in_V_data_V_0_sel_wr.read() & in_V_data_V_0_state_cmp_full.read());
}

void img_filter_hw::thread_in_V_data_V_0_sel() {
    in_V_data_V_0_sel = in_V_data_V_0_sel_rd.read();
}

void img_filter_hw::thread_in_V_data_V_0_state_cmp_full() {
    in_V_data_V_0_state_cmp_full =  (sc_logic) ((!in_V_data_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(in_V_data_V_0_state.read() != ap_const_lv2_1))[0];
}

void img_filter_hw::thread_in_V_data_V_0_vld_in() {
    in_V_data_V_0_vld_in = in_r_TVALID.read();
}

void img_filter_hw::thread_in_V_data_V_0_vld_out() {
    in_V_data_V_0_vld_out = in_V_data_V_0_state.read()[0];
}

void img_filter_hw::thread_in_V_dest_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_344_p2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        in_V_dest_V_0_ack_out = ap_const_logic_1;
    } else {
        in_V_dest_V_0_ack_out = ap_const_logic_0;
    }
}

void img_filter_hw::thread_in_V_dest_V_0_vld_in() {
    in_V_dest_V_0_vld_in = in_r_TVALID.read();
}

void img_filter_hw::thread_in_r_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_344_p2.read()))) {
        in_r_TDATA_blk_n = in_V_data_V_0_state.read()[0];
    } else {
        in_r_TDATA_blk_n = ap_const_logic_1;
    }
}

void img_filter_hw::thread_in_r_TREADY() {
    in_r_TREADY = in_V_dest_V_0_state.read()[1];
}

void img_filter_hw::thread_indvar_flatten_next_fu_350_p2() {
    indvar_flatten_next_fu_350_p2 = (!indvar_flatten_reg_299.read().is_01() || !ap_const_lv19_1.is_01())? sc_lv<19>(): (sc_biguint<19>(indvar_flatten_reg_299.read()) + sc_biguint<19>(ap_const_lv19_1));
}

void img_filter_hw::thread_lhs_V_1_fu_528_p1() {
    lhs_V_1_fu_528_p1 = esl_sext<10,9>(ret_V_2_fu_522_p2.read());
}

void img_filter_hw::thread_lhs_V_cast_fu_380_p1() {
    lhs_V_cast_fu_380_p1 = esl_zext<9,8>(p_Result_s_fu_360_p4.read());
}

void img_filter_hw::thread_lhs_V_fu_514_p1() {
    lhs_V_fu_514_p1 = esl_zext<9,8>(swin_V_0_1_1_fu_184.read());
}

void img_filter_hw::thread_out_V_data_V_1_ack_in() {
    out_V_data_V_1_ack_in = out_V_data_V_1_state.read()[1];
}

void img_filter_hw::thread_out_V_data_V_1_ack_out() {
    out_V_data_V_1_ack_out = out_r_TREADY.read();
}

void img_filter_hw::thread_out_V_data_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_V_data_V_1_sel.read())) {
        out_V_data_V_1_data_out = out_V_data_V_1_payload_B.read();
    } else {
        out_V_data_V_1_data_out = out_V_data_V_1_payload_A.read();
    }
}

void img_filter_hw::thread_out_V_data_V_1_load_A() {
    out_V_data_V_1_load_A = (out_V_data_V_1_state_cmp_full.read() & ~out_V_data_V_1_sel_wr.read());
}

void img_filter_hw::thread_out_V_data_V_1_load_B() {
    out_V_data_V_1_load_B = (out_V_data_V_1_sel_wr.read() & out_V_data_V_1_state_cmp_full.read());
}

void img_filter_hw::thread_out_V_data_V_1_sel() {
    out_V_data_V_1_sel = out_V_data_V_1_sel_rd.read();
}

void img_filter_hw::thread_out_V_data_V_1_state_cmp_full() {
    out_V_data_V_1_state_cmp_full =  (sc_logic) ((!out_V_data_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(out_V_data_V_1_state.read() != ap_const_lv2_1))[0];
}

void img_filter_hw::thread_out_V_data_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_717.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        out_V_data_V_1_vld_in = ap_const_logic_1;
    } else {
        out_V_data_V_1_vld_in = ap_const_logic_0;
    }
}

void img_filter_hw::thread_out_V_data_V_1_vld_out() {
    out_V_data_V_1_vld_out = out_V_data_V_1_state.read()[0];
}

void img_filter_hw::thread_out_V_dest_V_1_ack_in() {
    out_V_dest_V_1_ack_in = out_V_dest_V_1_state.read()[1];
}

void img_filter_hw::thread_out_V_dest_V_1_ack_out() {
    out_V_dest_V_1_ack_out = out_r_TREADY.read();
}

void img_filter_hw::thread_out_V_dest_V_1_data_out() {
    out_V_dest_V_1_data_out = ap_const_lv1_1;
}

void img_filter_hw::thread_out_V_dest_V_1_sel() {
    out_V_dest_V_1_sel = out_V_dest_V_1_sel_rd.read();
}

void img_filter_hw::thread_out_V_dest_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_717.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        out_V_dest_V_1_vld_in = ap_const_logic_1;
    } else {
        out_V_dest_V_1_vld_in = ap_const_logic_0;
    }
}

void img_filter_hw::thread_out_V_dest_V_1_vld_out() {
    out_V_dest_V_1_vld_out = out_V_dest_V_1_state.read()[0];
}

void img_filter_hw::thread_out_V_id_V_1_ack_in() {
    out_V_id_V_1_ack_in = out_V_id_V_1_state.read()[1];
}

void img_filter_hw::thread_out_V_id_V_1_ack_out() {
    out_V_id_V_1_ack_out = out_r_TREADY.read();
}

void img_filter_hw::thread_out_V_id_V_1_data_out() {
    out_V_id_V_1_data_out = ap_const_lv1_1;
}

void img_filter_hw::thread_out_V_id_V_1_sel() {
    out_V_id_V_1_sel = out_V_id_V_1_sel_rd.read();
}

void img_filter_hw::thread_out_V_id_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_717.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        out_V_id_V_1_vld_in = ap_const_logic_1;
    } else {
        out_V_id_V_1_vld_in = ap_const_logic_0;
    }
}

void img_filter_hw::thread_out_V_id_V_1_vld_out() {
    out_V_id_V_1_vld_out = out_V_id_V_1_state.read()[0];
}

void img_filter_hw::thread_out_V_keep_V_1_ack_in() {
    out_V_keep_V_1_ack_in = out_V_keep_V_1_state.read()[1];
}

void img_filter_hw::thread_out_V_keep_V_1_ack_out() {
    out_V_keep_V_1_ack_out = out_r_TREADY.read();
}

void img_filter_hw::thread_out_V_keep_V_1_data_out() {
    out_V_keep_V_1_data_out = ap_const_lv3_7;
}

void img_filter_hw::thread_out_V_keep_V_1_sel() {
    out_V_keep_V_1_sel = out_V_keep_V_1_sel_rd.read();
}

void img_filter_hw::thread_out_V_keep_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_717.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        out_V_keep_V_1_vld_in = ap_const_logic_1;
    } else {
        out_V_keep_V_1_vld_in = ap_const_logic_0;
    }
}

void img_filter_hw::thread_out_V_keep_V_1_vld_out() {
    out_V_keep_V_1_vld_out = out_V_keep_V_1_state.read()[0];
}

void img_filter_hw::thread_out_V_last_V_1_ack_in() {
    out_V_last_V_1_ack_in = out_V_last_V_1_state.read()[1];
}

void img_filter_hw::thread_out_V_last_V_1_ack_out() {
    out_V_last_V_1_ack_out = out_r_TREADY.read();
}

void img_filter_hw::thread_out_V_last_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_V_last_V_1_sel.read())) {
        out_V_last_V_1_data_out = out_V_last_V_1_payload_B.read();
    } else {
        out_V_last_V_1_data_out = out_V_last_V_1_payload_A.read();
    }
}

void img_filter_hw::thread_out_V_last_V_1_load_A() {
    out_V_last_V_1_load_A = (out_V_last_V_1_state_cmp_full.read() & ~out_V_last_V_1_sel_wr.read());
}

void img_filter_hw::thread_out_V_last_V_1_load_B() {
    out_V_last_V_1_load_B = (out_V_last_V_1_sel_wr.read() & out_V_last_V_1_state_cmp_full.read());
}

void img_filter_hw::thread_out_V_last_V_1_sel() {
    out_V_last_V_1_sel = out_V_last_V_1_sel_rd.read();
}

void img_filter_hw::thread_out_V_last_V_1_state_cmp_full() {
    out_V_last_V_1_state_cmp_full =  (sc_logic) ((!out_V_last_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(out_V_last_V_1_state.read() != ap_const_lv2_1))[0];
}

void img_filter_hw::thread_out_V_last_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_717.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        out_V_last_V_1_vld_in = ap_const_logic_1;
    } else {
        out_V_last_V_1_vld_in = ap_const_logic_0;
    }
}

void img_filter_hw::thread_out_V_last_V_1_vld_out() {
    out_V_last_V_1_vld_out = out_V_last_V_1_state.read()[0];
}

void img_filter_hw::thread_out_V_strb_V_1_ack_in() {
    out_V_strb_V_1_ack_in = out_V_strb_V_1_state.read()[1];
}

void img_filter_hw::thread_out_V_strb_V_1_ack_out() {
    out_V_strb_V_1_ack_out = out_r_TREADY.read();
}

void img_filter_hw::thread_out_V_strb_V_1_data_out() {
    out_V_strb_V_1_data_out = ap_const_lv3_7;
}

void img_filter_hw::thread_out_V_strb_V_1_sel() {
    out_V_strb_V_1_sel = out_V_strb_V_1_sel_rd.read();
}

void img_filter_hw::thread_out_V_strb_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_717.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        out_V_strb_V_1_vld_in = ap_const_logic_1;
    } else {
        out_V_strb_V_1_vld_in = ap_const_logic_0;
    }
}

void img_filter_hw::thread_out_V_strb_V_1_vld_out() {
    out_V_strb_V_1_vld_out = out_V_strb_V_1_state.read()[0];
}

void img_filter_hw::thread_out_V_user_V_1_ack_in() {
    out_V_user_V_1_ack_in = out_V_user_V_1_state.read()[1];
}

void img_filter_hw::thread_out_V_user_V_1_ack_out() {
    out_V_user_V_1_ack_out = out_r_TREADY.read();
}

void img_filter_hw::thread_out_V_user_V_1_data_out() {
    out_V_user_V_1_data_out = ap_const_lv1_1;
}

void img_filter_hw::thread_out_V_user_V_1_sel() {
    out_V_user_V_1_sel = out_V_user_V_1_sel_rd.read();
}

void img_filter_hw::thread_out_V_user_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_717.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        out_V_user_V_1_vld_in = ap_const_logic_1;
    } else {
        out_V_user_V_1_vld_in = ap_const_logic_0;
    }
}

void img_filter_hw::thread_out_V_user_V_1_vld_out() {
    out_V_user_V_1_vld_out = out_V_user_V_1_state.read()[0];
}

void img_filter_hw::thread_out_r_TDATA() {
    out_r_TDATA = out_V_data_V_1_data_out.read();
}

void img_filter_hw::thread_out_r_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_717.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_717_pp0_iter1_reg.read())))) {
        out_r_TDATA_blk_n = out_V_data_V_1_state.read()[1];
    } else {
        out_r_TDATA_blk_n = ap_const_logic_1;
    }
}

void img_filter_hw::thread_out_r_TDEST() {
    out_r_TDEST = out_V_dest_V_1_data_out.read();
}

void img_filter_hw::thread_out_r_TID() {
    out_r_TID = out_V_id_V_1_data_out.read();
}

void img_filter_hw::thread_out_r_TKEEP() {
    out_r_TKEEP = out_V_keep_V_1_data_out.read();
}

void img_filter_hw::thread_out_r_TLAST() {
    out_r_TLAST = out_V_last_V_1_data_out.read();
}

void img_filter_hw::thread_out_r_TSTRB() {
    out_r_TSTRB = out_V_strb_V_1_data_out.read();
}

void img_filter_hw::thread_out_r_TUSER() {
    out_r_TUSER = out_V_user_V_1_data_out.read();
}

void img_filter_hw::thread_out_r_TVALID() {
    out_r_TVALID = out_V_dest_V_1_state.read()[0];
}

void img_filter_hw::thread_p_Result_1_fu_370_p4() {
    p_Result_1_fu_370_p4 = in_V_data_V_0_data_out.read().range(15, 8);
}

void img_filter_hw::thread_p_Result_s_fu_360_p4() {
    p_Result_s_fu_360_p4 = in_V_data_V_0_data_out.read().range(23, 16);
}

void img_filter_hw::thread_p_s_fu_559_p3() {
    p_s_fu_559_p3 = (!tmp_4_fu_551_p3.read()[0].is_01())? sc_lv<10>(): ((tmp_4_fu_551_p3.read()[0].to_bool())? ap_const_lv10_0: ret_V_4_fu_545_p2.read());
}

void img_filter_hw::thread_ret_V_2_fu_522_p2() {
    ret_V_2_fu_522_p2 = (!lhs_V_fu_514_p1.read().is_01() || !rhs_V_fu_518_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(lhs_V_fu_514_p1.read()) - sc_biguint<9>(rhs_V_fu_518_p1.read()));
}

void img_filter_hw::thread_ret_V_3_fu_536_p2() {
    ret_V_3_fu_536_p2 = (!lhs_V_1_fu_528_p1.read().is_01() || !rhs_V_1_fu_532_p1.read().is_01())? sc_lv<10>(): (sc_bigint<10>(lhs_V_1_fu_528_p1.read()) - sc_biguint<10>(rhs_V_1_fu_532_p1.read()));
}

void img_filter_hw::thread_ret_V_4_fu_545_p2() {
    ret_V_4_fu_545_p2 = (!ret_V_3_fu_536_p2.read().is_01() || !rhs_V_4_cast_fu_542_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ret_V_3_fu_536_p2.read()) + sc_biguint<10>(rhs_V_4_cast_fu_542_p1.read()));
}

void img_filter_hw::thread_ret_V_fu_388_p2() {
    ret_V_fu_388_p2 = (!rhs_V_cast_fu_384_p1.read().is_01() || !lhs_V_cast_fu_380_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(rhs_V_cast_fu_384_p1.read()) + sc_biguint<9>(lhs_V_cast_fu_380_p1.read()));
}

void img_filter_hw::thread_rhs_V_1_fu_532_p1() {
    rhs_V_1_fu_532_p1 = esl_zext<10,8>(swin_2_0_V_fu_208.read());
}

void img_filter_hw::thread_rhs_V_4_cast_fu_542_p1() {
    rhs_V_4_cast_fu_542_p1 = esl_zext<10,8>(swin_2_2_V_reg_726.read());
}

void img_filter_hw::thread_rhs_V_cast_fu_384_p1() {
    rhs_V_cast_fu_384_p1 = esl_zext<9,8>(p_Result_1_fu_370_p4.read());
}

void img_filter_hw::thread_rhs_V_fu_518_p1() {
    rhs_V_fu_518_p1 = esl_zext<9,8>(buff1_V_V_dout.read());
}

void img_filter_hw::thread_row_mid2_fu_506_p3() {
    row_mid2_fu_506_p3 = (!tmp_s_fu_466_p2.read()[0].is_01())? sc_lv<9>(): ((tmp_s_fu_466_p2.read()[0].to_bool())? row_s_fu_480_p2.read(): row_reg_310.read());
}

void img_filter_hw::thread_row_s_fu_480_p2() {
    row_s_fu_480_p2 = (!ap_const_lv9_1.is_01() || !row_reg_310.read().is_01())? sc_lv<9>(): (sc_biguint<9>(ap_const_lv9_1) + sc_biguint<9>(row_reg_310.read()));
}

void img_filter_hw::thread_tmp_1_fu_492_p2() {
    tmp_1_fu_492_p2 = (!row_reg_310.read().is_01() || !ap_const_lv9_1DF.is_01())? sc_lv<1>(): sc_lv<1>(row_reg_310.read() == ap_const_lv9_1DF);
}

void img_filter_hw::thread_tmp_2_fu_394_p1() {
    tmp_2_fu_394_p1 = in_V_data_V_0_data_out.read().range(8-1, 0);
}

void img_filter_hw::thread_tmp_3_fu_606_p2() {
    tmp_3_fu_606_p2 = (!col_1_mid2_fu_472_p3.read().is_01() || !ap_const_lv10_27F.is_01())? sc_lv<1>(): sc_lv<1>(col_1_mid2_fu_472_p3.read() == ap_const_lv10_27F);
}

void img_filter_hw::thread_tmp_4_fu_551_p3() {
    tmp_4_fu_551_p3 = ret_V_4_fu_545_p2.read().range(9, 9);
}

void img_filter_hw::thread_tmp_5_fu_567_p4() {
    tmp_5_fu_567_p4 = p_s_fu_559_p3.read().range(9, 8);
}

void img_filter_hw::thread_tmp_5_mid1_fu_486_p2() {
    tmp_5_mid1_fu_486_p2 = (!row_s_fu_480_p2.read().is_01() || !ap_const_lv9_1DF.is_01())? sc_lv<1>(): sc_lv<1>(row_s_fu_480_p2.read() == ap_const_lv9_1DF);
}

void img_filter_hw::thread_tmp_5_mid2_fu_498_p3() {
    tmp_5_mid2_fu_498_p3 = (!tmp_s_fu_466_p2.read()[0].is_01())? sc_lv<1>(): ((tmp_s_fu_466_p2.read()[0].to_bool())? tmp_5_mid1_fu_486_p2.read(): tmp_1_fu_492_p2.read());
}

void img_filter_hw::thread_tmp_6_fu_583_p1() {
    tmp_6_fu_583_p1 = p_s_fu_559_p3.read().range(8-1, 0);
}

void img_filter_hw::thread_tmp_9_fu_587_p3() {
    tmp_9_fu_587_p3 = (!icmp_fu_577_p2.read()[0].is_01())? sc_lv<8>(): ((icmp_fu_577_p2.read()[0].to_bool())? ap_const_lv8_FF: tmp_6_fu_583_p1.read());
}

void img_filter_hw::thread_tmp_data_V_fu_595_p4() {
    tmp_data_V_fu_595_p4 = esl_concat<16,8>(esl_concat<8,8>(tmp_9_fu_587_p3.read(), tmp_9_fu_587_p3.read()), tmp_9_fu_587_p3.read());
}

void img_filter_hw::thread_tmp_fu_332_p2() {
    tmp_fu_332_p2 = (!col_reg_288.read().is_01() || !ap_const_lv10_27D.is_01())? sc_lv<1>(): sc_lv<1>(col_reg_288.read() == ap_const_lv10_27D);
}

void img_filter_hw::thread_tmp_last_V_fu_612_p2() {
    tmp_last_V_fu_612_p2 = (tmp_5_mid2_fu_498_p3.read() & tmp_3_fu_606_p2.read());
}

void img_filter_hw::thread_tmp_s_fu_466_p2() {
    tmp_s_fu_466_p2 = (!col_1_reg_321.read().is_01() || !ap_const_lv10_280.is_01())? sc_lv<1>(): sc_lv<1>(col_1_reg_321.read() == ap_const_lv10_280);
}

void img_filter_hw::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !((esl_seteq<1,1,1>(ap_const_logic_0, buff1_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_332_p2.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_332_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, buff2_V_V_full_n.read()))) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_332_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_332_p2.read()) && !((esl_seteq<1,1,1>(ap_const_logic_0, buff1_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_332_p2.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_332_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, buff2_V_V_full_n.read()))))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_0, out_V_data_V_1_state.read()[0]) && esl_seteq<1,1,1>(ap_const_logic_0, out_V_keep_V_1_state.read()[0]) && esl_seteq<1,1,1>(ap_const_logic_0, out_V_strb_V_1_state.read()[0]) && esl_seteq<1,1,1>(ap_const_logic_0, out_V_user_V_1_state.read()[0]) && esl_seteq<1,1,1>(ap_const_logic_0, out_V_last_V_1_state.read()[0]) && esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V_1_state.read()[0]) && esl_seteq<1,1,1>(ap_const_logic_0, out_V_dest_V_1_state.read()[0]) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, out_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_V_dest_V_1_ack_in.read())))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<4>) ("XXXX");
            break;
    }
}

void img_filter_hw::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_TDATA\" :  \"" << in_r_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_TVALID\" :  \"" << in_r_TVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"in_r_TREADY\" :  \"" << in_r_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_TKEEP\" :  \"" << in_r_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_TSTRB\" :  \"" << in_r_TSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_TUSER\" :  \"" << in_r_TUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_TLAST\" :  \"" << in_r_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_TID\" :  \"" << in_r_TID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_TDEST\" :  \"" << in_r_TDEST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_TDATA\" :  \"" << out_r_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_TVALID\" :  \"" << out_r_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"out_r_TREADY\" :  \"" << out_r_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_TKEEP\" :  \"" << out_r_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_TSTRB\" :  \"" << out_r_TSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_TUSER\" :  \"" << out_r_TUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_TLAST\" :  \"" << out_r_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_TID\" :  \"" << out_r_TID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_TDEST\" :  \"" << out_r_TDEST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

