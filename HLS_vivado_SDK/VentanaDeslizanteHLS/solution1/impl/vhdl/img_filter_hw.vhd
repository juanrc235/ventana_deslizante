-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity img_filter_hw is
generic (
    C_S_AXI_AXILITES_ADDR_WIDTH : INTEGER := 4;
    C_S_AXI_AXILITES_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    in_r_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
    in_r_TVALID : IN STD_LOGIC;
    in_r_TREADY : OUT STD_LOGIC;
    in_r_TKEEP : IN STD_LOGIC_VECTOR (2 downto 0);
    in_r_TSTRB : IN STD_LOGIC_VECTOR (2 downto 0);
    in_r_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    in_r_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    in_r_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    in_r_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    out_r_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
    out_r_TVALID : OUT STD_LOGIC;
    out_r_TREADY : IN STD_LOGIC;
    out_r_TKEEP : OUT STD_LOGIC_VECTOR (2 downto 0);
    out_r_TSTRB : OUT STD_LOGIC_VECTOR (2 downto 0);
    out_r_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    out_r_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    out_r_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
    out_r_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0);
    s_axi_AXILiteS_AWVALID : IN STD_LOGIC;
    s_axi_AXILiteS_AWREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_ADDR_WIDTH-1 downto 0);
    s_axi_AXILiteS_WVALID : IN STD_LOGIC;
    s_axi_AXILiteS_WREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH-1 downto 0);
    s_axi_AXILiteS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH/8-1 downto 0);
    s_axi_AXILiteS_ARVALID : IN STD_LOGIC;
    s_axi_AXILiteS_ARREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_ADDR_WIDTH-1 downto 0);
    s_axi_AXILiteS_RVALID : OUT STD_LOGIC;
    s_axi_AXILiteS_RREADY : IN STD_LOGIC;
    s_axi_AXILiteS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH-1 downto 0);
    s_axi_AXILiteS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_AXILiteS_BVALID : OUT STD_LOGIC;
    s_axi_AXILiteS_BREADY : IN STD_LOGIC;
    s_axi_AXILiteS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of img_filter_hw is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "img_filter_hw,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu3eg-sbva484-1-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.303750,HLS_SYN_LAT=615999,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=1,HLS_SYN_FF=357,HLS_SYN_LUT=704,HLS_VERSION=2018_3}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv10_27D : STD_LOGIC_VECTOR (9 downto 0) := "1001111101";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv9_1E0 : STD_LOGIC_VECTOR (8 downto 0) := "111100000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv9_1DF : STD_LOGIC_VECTOR (8 downto 0) := "111011111";
    constant ap_const_lv10_280 : STD_LOGIC_VECTOR (9 downto 0) := "1010000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv10_27F : STD_LOGIC_VECTOR (9 downto 0) := "1001111111";
    constant ap_const_lv22_556 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000010101010110";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal in_V_data_V_0_data_out : STD_LOGIC_VECTOR (23 downto 0);
    signal in_V_data_V_0_vld_in : STD_LOGIC;
    signal in_V_data_V_0_vld_out : STD_LOGIC;
    signal in_V_data_V_0_ack_in : STD_LOGIC;
    signal in_V_data_V_0_ack_out : STD_LOGIC;
    signal in_V_data_V_0_payload_A : STD_LOGIC_VECTOR (23 downto 0);
    signal in_V_data_V_0_payload_B : STD_LOGIC_VECTOR (23 downto 0);
    signal in_V_data_V_0_sel_rd : STD_LOGIC := '0';
    signal in_V_data_V_0_sel_wr : STD_LOGIC := '0';
    signal in_V_data_V_0_sel : STD_LOGIC;
    signal in_V_data_V_0_load_A : STD_LOGIC;
    signal in_V_data_V_0_load_B : STD_LOGIC;
    signal in_V_data_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal in_V_data_V_0_state_cmp_full : STD_LOGIC;
    signal in_V_dest_V_0_vld_in : STD_LOGIC;
    signal in_V_dest_V_0_ack_out : STD_LOGIC;
    signal in_V_dest_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal out_V_data_V_1_data_out : STD_LOGIC_VECTOR (23 downto 0);
    signal out_V_data_V_1_vld_in : STD_LOGIC;
    signal out_V_data_V_1_vld_out : STD_LOGIC;
    signal out_V_data_V_1_ack_in : STD_LOGIC;
    signal out_V_data_V_1_ack_out : STD_LOGIC;
    signal out_V_data_V_1_payload_A : STD_LOGIC_VECTOR (23 downto 0);
    signal out_V_data_V_1_payload_B : STD_LOGIC_VECTOR (23 downto 0);
    signal out_V_data_V_1_sel_rd : STD_LOGIC := '0';
    signal out_V_data_V_1_sel_wr : STD_LOGIC := '0';
    signal out_V_data_V_1_sel : STD_LOGIC;
    signal out_V_data_V_1_load_A : STD_LOGIC;
    signal out_V_data_V_1_load_B : STD_LOGIC;
    signal out_V_data_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal out_V_data_V_1_state_cmp_full : STD_LOGIC;
    signal out_V_keep_V_1_data_out : STD_LOGIC_VECTOR (2 downto 0);
    signal out_V_keep_V_1_vld_in : STD_LOGIC;
    signal out_V_keep_V_1_vld_out : STD_LOGIC;
    signal out_V_keep_V_1_ack_in : STD_LOGIC;
    signal out_V_keep_V_1_ack_out : STD_LOGIC;
    signal out_V_keep_V_1_sel_rd : STD_LOGIC := '0';
    signal out_V_keep_V_1_sel : STD_LOGIC;
    signal out_V_keep_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal out_V_strb_V_1_data_out : STD_LOGIC_VECTOR (2 downto 0);
    signal out_V_strb_V_1_vld_in : STD_LOGIC;
    signal out_V_strb_V_1_vld_out : STD_LOGIC;
    signal out_V_strb_V_1_ack_in : STD_LOGIC;
    signal out_V_strb_V_1_ack_out : STD_LOGIC;
    signal out_V_strb_V_1_sel_rd : STD_LOGIC := '0';
    signal out_V_strb_V_1_sel : STD_LOGIC;
    signal out_V_strb_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal out_V_user_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal out_V_user_V_1_vld_in : STD_LOGIC;
    signal out_V_user_V_1_vld_out : STD_LOGIC;
    signal out_V_user_V_1_ack_in : STD_LOGIC;
    signal out_V_user_V_1_ack_out : STD_LOGIC;
    signal out_V_user_V_1_sel_rd : STD_LOGIC := '0';
    signal out_V_user_V_1_sel : STD_LOGIC;
    signal out_V_user_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal out_V_last_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal out_V_last_V_1_vld_in : STD_LOGIC;
    signal out_V_last_V_1_vld_out : STD_LOGIC;
    signal out_V_last_V_1_ack_in : STD_LOGIC;
    signal out_V_last_V_1_ack_out : STD_LOGIC;
    signal out_V_last_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal out_V_last_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal out_V_last_V_1_sel_rd : STD_LOGIC := '0';
    signal out_V_last_V_1_sel_wr : STD_LOGIC := '0';
    signal out_V_last_V_1_sel : STD_LOGIC;
    signal out_V_last_V_1_load_A : STD_LOGIC;
    signal out_V_last_V_1_load_B : STD_LOGIC;
    signal out_V_last_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal out_V_last_V_1_state_cmp_full : STD_LOGIC;
    signal out_V_id_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal out_V_id_V_1_vld_in : STD_LOGIC;
    signal out_V_id_V_1_vld_out : STD_LOGIC;
    signal out_V_id_V_1_ack_in : STD_LOGIC;
    signal out_V_id_V_1_ack_out : STD_LOGIC;
    signal out_V_id_V_1_sel_rd : STD_LOGIC := '0';
    signal out_V_id_V_1_sel : STD_LOGIC;
    signal out_V_id_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal out_V_dest_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal out_V_dest_V_1_vld_in : STD_LOGIC;
    signal out_V_dest_V_1_vld_out : STD_LOGIC;
    signal out_V_dest_V_1_ack_in : STD_LOGIC;
    signal out_V_dest_V_1_ack_out : STD_LOGIC;
    signal out_V_dest_V_1_sel_rd : STD_LOGIC := '0';
    signal out_V_dest_V_1_sel : STD_LOGIC;
    signal out_V_dest_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal in_r_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_7_fu_362_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_r_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal col_2_fu_323_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal buff1_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal buff1_V_V_full_n : STD_LOGIC;
    signal buff1_V_V_write : STD_LOGIC;
    signal tmp_fu_317_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal buff2_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal buff2_V_V_full_n : STD_LOGIC;
    signal buff2_V_V_write : STD_LOGIC;
    signal ap_block_state2 : BOOLEAN;
    signal row_1_fu_335_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal row_1_reg_679 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_block_state3 : BOOLEAN;
    signal tmp_6_fu_341_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_reg_684 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_329_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_3_fu_368_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal col_3_reg_692 : STD_LOGIC_VECTOR (9 downto 0);
    signal buff1_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal buff1_V_V_empty_n : STD_LOGIC;
    signal buff1_V_V_read : STD_LOGIC;
    signal buff2_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal buff2_V_V_empty_n : STD_LOGIC;
    signal buff2_V_V_read : STD_LOGIC;
    signal ap_block_state4 : BOOLEAN;
    signal ap_block_state4_io : BOOLEAN;
    signal tmp_data_V_fu_536_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_last_V_fu_553_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_reg_284 : STD_LOGIC_VECTOR (9 downto 0);
    signal row_reg_295 : STD_LOGIC_VECTOR (8 downto 0);
    signal col_1_reg_306 : STD_LOGIC_VECTOR (9 downto 0);
    signal swin_0_1_V_fu_180 : STD_LOGIC_VECTOR (7 downto 0);
    signal swin_0_1_V_1_fu_184 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_V_fu_188 : STD_LOGIC_VECTOR (7 downto 0);
    signal swin_1_0_V_fu_192 : STD_LOGIC_VECTOR (7 downto 0);
    signal swin_1_1_V_fu_196 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_V_1_fu_200 : STD_LOGIC_VECTOR (7 downto 0);
    signal swin_2_0_V_fu_204 : STD_LOGIC_VECTOR (7 downto 0);
    signal swin_2_1_V_fu_208 : STD_LOGIC_VECTOR (7 downto 0);
    signal swin_2_2_V_fu_435_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_s_fu_389_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_1_fu_399_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal rhs_V_cast_fu_413_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal lhs_V_cast_fu_409_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_fu_417_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_1_fu_423_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_599_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal lhs_V_3_cast_fu_448_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal lhs_V_2_cast_fu_444_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal lhs_V_4_cast_fu_458_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_2_fu_452_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_3_fu_462_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal lhs_V_5_cast_fu_468_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal rhs_V_3_cast_fu_472_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_4_fu_476_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal rhs_V_4_cast_fu_482_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_5_fu_486_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_4_fu_492_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_s_fu_500_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_9_fu_508_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_fu_518_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_524_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_fu_528_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_fu_547_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_599_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_599_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_599_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_599_p00 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_599_p10 : STD_LOGIC_VECTOR (9 downto 0);

    component img_filter_hw_am_bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component fifo_w8_d640_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component img_filter_hw_AXILiteS_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;



begin
    img_filter_hw_AXILiteS_s_axi_U : component img_filter_hw_AXILiteS_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_AXILITES_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_AXILITES_DATA_WIDTH)
    port map (
        AWVALID => s_axi_AXILiteS_AWVALID,
        AWREADY => s_axi_AXILiteS_AWREADY,
        AWADDR => s_axi_AXILiteS_AWADDR,
        WVALID => s_axi_AXILiteS_WVALID,
        WREADY => s_axi_AXILiteS_WREADY,
        WDATA => s_axi_AXILiteS_WDATA,
        WSTRB => s_axi_AXILiteS_WSTRB,
        ARVALID => s_axi_AXILiteS_ARVALID,
        ARREADY => s_axi_AXILiteS_ARREADY,
        ARADDR => s_axi_AXILiteS_ARADDR,
        RVALID => s_axi_AXILiteS_RVALID,
        RREADY => s_axi_AXILiteS_RREADY,
        RDATA => s_axi_AXILiteS_RDATA,
        RRESP => s_axi_AXILiteS_RRESP,
        BVALID => s_axi_AXILiteS_BVALID,
        BREADY => s_axi_AXILiteS_BREADY,
        BRESP => s_axi_AXILiteS_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    img_filter_hw_am_bkb_U1 : component img_filter_hw_am_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 8,
        din2_WIDTH => 12,
        dout_WIDTH => 22)
    port map (
        din0 => grp_fu_599_p0,
        din1 => grp_fu_599_p1,
        din2 => grp_fu_599_p2,
        dout => grp_fu_599_p3);

    buff1_V_V_fifo_U : component fifo_w8_d640_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => buff1_V_V_din,
        if_full_n => buff1_V_V_full_n,
        if_write => buff1_V_V_write,
        if_dout => buff1_V_V_dout,
        if_empty_n => buff1_V_V_empty_n,
        if_read => buff1_V_V_read);

    buff2_V_V_fifo_U : component fifo_w8_d640_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => buff2_V_V_din,
        if_full_n => buff2_V_V_full_n,
        if_write => buff2_V_V_write,
        if_dout => buff2_V_V_dout,
        if_empty_n => buff2_V_V_empty_n,
        if_read => buff2_V_V_read);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    in_V_data_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                in_V_data_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((in_V_data_V_0_ack_out = ap_const_logic_1) and (in_V_data_V_0_vld_out = ap_const_logic_1))) then 
                                        in_V_data_V_0_sel_rd <= not(in_V_data_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    in_V_data_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                in_V_data_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((in_V_data_V_0_ack_in = ap_const_logic_1) and (in_V_data_V_0_vld_in = ap_const_logic_1))) then 
                                        in_V_data_V_0_sel_wr <= not(in_V_data_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    in_V_data_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                in_V_data_V_0_state <= ap_const_lv2_0;
            else
                if ((((in_V_data_V_0_state = ap_const_lv2_2) and (in_V_data_V_0_vld_in = ap_const_logic_0)) or ((in_V_data_V_0_state = ap_const_lv2_3) and (in_V_data_V_0_vld_in = ap_const_logic_0) and (in_V_data_V_0_ack_out = ap_const_logic_1)))) then 
                    in_V_data_V_0_state <= ap_const_lv2_2;
                elsif ((((in_V_data_V_0_state = ap_const_lv2_1) and (in_V_data_V_0_ack_out = ap_const_logic_0)) or ((in_V_data_V_0_state = ap_const_lv2_3) and (in_V_data_V_0_ack_out = ap_const_logic_0) and (in_V_data_V_0_vld_in = ap_const_logic_1)))) then 
                    in_V_data_V_0_state <= ap_const_lv2_1;
                elsif (((not(((in_V_data_V_0_vld_in = ap_const_logic_0) and (in_V_data_V_0_ack_out = ap_const_logic_1))) and not(((in_V_data_V_0_ack_out = ap_const_logic_0) and (in_V_data_V_0_vld_in = ap_const_logic_1))) and (in_V_data_V_0_state = ap_const_lv2_3)) or ((in_V_data_V_0_state = ap_const_lv2_1) and (in_V_data_V_0_ack_out = ap_const_logic_1)) or ((in_V_data_V_0_state = ap_const_lv2_2) and (in_V_data_V_0_vld_in = ap_const_logic_1)))) then 
                    in_V_data_V_0_state <= ap_const_lv2_3;
                else 
                    in_V_data_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    in_V_dest_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                in_V_dest_V_0_state <= ap_const_lv2_0;
            else
                if ((((in_V_dest_V_0_state = ap_const_lv2_2) and (in_V_dest_V_0_vld_in = ap_const_logic_0)) or ((in_V_dest_V_0_state = ap_const_lv2_3) and (in_V_dest_V_0_vld_in = ap_const_logic_0) and (in_V_dest_V_0_ack_out = ap_const_logic_1)))) then 
                    in_V_dest_V_0_state <= ap_const_lv2_2;
                elsif ((((in_V_dest_V_0_state = ap_const_lv2_1) and (in_V_dest_V_0_ack_out = ap_const_logic_0)) or ((in_V_dest_V_0_state = ap_const_lv2_3) and (in_V_dest_V_0_ack_out = ap_const_logic_0) and (in_V_dest_V_0_vld_in = ap_const_logic_1)))) then 
                    in_V_dest_V_0_state <= ap_const_lv2_1;
                elsif (((not(((in_V_dest_V_0_vld_in = ap_const_logic_0) and (in_V_dest_V_0_ack_out = ap_const_logic_1))) and not(((in_V_dest_V_0_ack_out = ap_const_logic_0) and (in_V_dest_V_0_vld_in = ap_const_logic_1))) and (in_V_dest_V_0_state = ap_const_lv2_3)) or ((in_V_dest_V_0_state = ap_const_lv2_1) and (in_V_dest_V_0_ack_out = ap_const_logic_1)) or ((in_V_dest_V_0_state = ap_const_lv2_2) and (in_V_dest_V_0_vld_in = ap_const_logic_1)))) then 
                    in_V_dest_V_0_state <= ap_const_lv2_3;
                else 
                    in_V_dest_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    out_V_data_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_V_data_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((out_V_data_V_1_ack_out = ap_const_logic_1) and (out_V_data_V_1_vld_out = ap_const_logic_1))) then 
                                        out_V_data_V_1_sel_rd <= not(out_V_data_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    out_V_data_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_V_data_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((out_V_data_V_1_ack_in = ap_const_logic_1) and (out_V_data_V_1_vld_in = ap_const_logic_1))) then 
                                        out_V_data_V_1_sel_wr <= not(out_V_data_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    out_V_data_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_V_data_V_1_state <= ap_const_lv2_0;
            else
                if ((((out_V_data_V_1_state = ap_const_lv2_2) and (out_V_data_V_1_vld_in = ap_const_logic_0)) or ((out_V_data_V_1_state = ap_const_lv2_3) and (out_V_data_V_1_vld_in = ap_const_logic_0) and (out_V_data_V_1_ack_out = ap_const_logic_1)))) then 
                    out_V_data_V_1_state <= ap_const_lv2_2;
                elsif ((((out_V_data_V_1_state = ap_const_lv2_1) and (out_V_data_V_1_ack_out = ap_const_logic_0)) or ((out_V_data_V_1_state = ap_const_lv2_3) and (out_V_data_V_1_ack_out = ap_const_logic_0) and (out_V_data_V_1_vld_in = ap_const_logic_1)))) then 
                    out_V_data_V_1_state <= ap_const_lv2_1;
                elsif (((not(((out_V_data_V_1_vld_in = ap_const_logic_0) and (out_V_data_V_1_ack_out = ap_const_logic_1))) and not(((out_V_data_V_1_ack_out = ap_const_logic_0) and (out_V_data_V_1_vld_in = ap_const_logic_1))) and (out_V_data_V_1_state = ap_const_lv2_3)) or ((out_V_data_V_1_state = ap_const_lv2_1) and (out_V_data_V_1_ack_out = ap_const_logic_1)) or ((out_V_data_V_1_state = ap_const_lv2_2) and (out_V_data_V_1_vld_in = ap_const_logic_1)))) then 
                    out_V_data_V_1_state <= ap_const_lv2_3;
                else 
                    out_V_data_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    out_V_dest_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_V_dest_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((out_V_dest_V_1_ack_out = ap_const_logic_1) and (out_V_dest_V_1_vld_out = ap_const_logic_1))) then 
                                        out_V_dest_V_1_sel_rd <= not(out_V_dest_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    out_V_dest_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_V_dest_V_1_state <= ap_const_lv2_0;
            else
                if ((((out_V_dest_V_1_state = ap_const_lv2_2) and (out_V_dest_V_1_vld_in = ap_const_logic_0)) or ((out_V_dest_V_1_state = ap_const_lv2_3) and (out_V_dest_V_1_vld_in = ap_const_logic_0) and (out_V_dest_V_1_ack_out = ap_const_logic_1)))) then 
                    out_V_dest_V_1_state <= ap_const_lv2_2;
                elsif ((((out_V_dest_V_1_state = ap_const_lv2_1) and (out_V_dest_V_1_ack_out = ap_const_logic_0)) or ((out_V_dest_V_1_state = ap_const_lv2_3) and (out_V_dest_V_1_ack_out = ap_const_logic_0) and (out_V_dest_V_1_vld_in = ap_const_logic_1)))) then 
                    out_V_dest_V_1_state <= ap_const_lv2_1;
                elsif (((not(((out_V_dest_V_1_vld_in = ap_const_logic_0) and (out_V_dest_V_1_ack_out = ap_const_logic_1))) and not(((out_V_dest_V_1_ack_out = ap_const_logic_0) and (out_V_dest_V_1_vld_in = ap_const_logic_1))) and (out_V_dest_V_1_state = ap_const_lv2_3)) or ((out_V_dest_V_1_state = ap_const_lv2_1) and (out_V_dest_V_1_ack_out = ap_const_logic_1)) or ((out_V_dest_V_1_state = ap_const_lv2_2) and (out_V_dest_V_1_vld_in = ap_const_logic_1)))) then 
                    out_V_dest_V_1_state <= ap_const_lv2_3;
                else 
                    out_V_dest_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    out_V_id_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_V_id_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((out_V_id_V_1_ack_out = ap_const_logic_1) and (out_V_id_V_1_vld_out = ap_const_logic_1))) then 
                                        out_V_id_V_1_sel_rd <= not(out_V_id_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    out_V_id_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_V_id_V_1_state <= ap_const_lv2_0;
            else
                if ((((out_V_id_V_1_state = ap_const_lv2_2) and (out_V_id_V_1_vld_in = ap_const_logic_0)) or ((out_V_id_V_1_state = ap_const_lv2_3) and (out_V_id_V_1_vld_in = ap_const_logic_0) and (out_V_id_V_1_ack_out = ap_const_logic_1)))) then 
                    out_V_id_V_1_state <= ap_const_lv2_2;
                elsif ((((out_V_id_V_1_state = ap_const_lv2_1) and (out_V_id_V_1_ack_out = ap_const_logic_0)) or ((out_V_id_V_1_state = ap_const_lv2_3) and (out_V_id_V_1_ack_out = ap_const_logic_0) and (out_V_id_V_1_vld_in = ap_const_logic_1)))) then 
                    out_V_id_V_1_state <= ap_const_lv2_1;
                elsif (((not(((out_V_id_V_1_vld_in = ap_const_logic_0) and (out_V_id_V_1_ack_out = ap_const_logic_1))) and not(((out_V_id_V_1_ack_out = ap_const_logic_0) and (out_V_id_V_1_vld_in = ap_const_logic_1))) and (out_V_id_V_1_state = ap_const_lv2_3)) or ((out_V_id_V_1_state = ap_const_lv2_1) and (out_V_id_V_1_ack_out = ap_const_logic_1)) or ((out_V_id_V_1_state = ap_const_lv2_2) and (out_V_id_V_1_vld_in = ap_const_logic_1)))) then 
                    out_V_id_V_1_state <= ap_const_lv2_3;
                else 
                    out_V_id_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    out_V_keep_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_V_keep_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((out_V_keep_V_1_ack_out = ap_const_logic_1) and (out_V_keep_V_1_vld_out = ap_const_logic_1))) then 
                                        out_V_keep_V_1_sel_rd <= not(out_V_keep_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    out_V_keep_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_V_keep_V_1_state <= ap_const_lv2_0;
            else
                if ((((out_V_keep_V_1_state = ap_const_lv2_2) and (out_V_keep_V_1_vld_in = ap_const_logic_0)) or ((out_V_keep_V_1_state = ap_const_lv2_3) and (out_V_keep_V_1_vld_in = ap_const_logic_0) and (out_V_keep_V_1_ack_out = ap_const_logic_1)))) then 
                    out_V_keep_V_1_state <= ap_const_lv2_2;
                elsif ((((out_V_keep_V_1_state = ap_const_lv2_1) and (out_V_keep_V_1_ack_out = ap_const_logic_0)) or ((out_V_keep_V_1_state = ap_const_lv2_3) and (out_V_keep_V_1_ack_out = ap_const_logic_0) and (out_V_keep_V_1_vld_in = ap_const_logic_1)))) then 
                    out_V_keep_V_1_state <= ap_const_lv2_1;
                elsif (((not(((out_V_keep_V_1_vld_in = ap_const_logic_0) and (out_V_keep_V_1_ack_out = ap_const_logic_1))) and not(((out_V_keep_V_1_ack_out = ap_const_logic_0) and (out_V_keep_V_1_vld_in = ap_const_logic_1))) and (out_V_keep_V_1_state = ap_const_lv2_3)) or ((out_V_keep_V_1_state = ap_const_lv2_1) and (out_V_keep_V_1_ack_out = ap_const_logic_1)) or ((out_V_keep_V_1_state = ap_const_lv2_2) and (out_V_keep_V_1_vld_in = ap_const_logic_1)))) then 
                    out_V_keep_V_1_state <= ap_const_lv2_3;
                else 
                    out_V_keep_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    out_V_last_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_V_last_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((out_V_last_V_1_ack_out = ap_const_logic_1) and (out_V_last_V_1_vld_out = ap_const_logic_1))) then 
                                        out_V_last_V_1_sel_rd <= not(out_V_last_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    out_V_last_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_V_last_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((out_V_last_V_1_ack_in = ap_const_logic_1) and (out_V_last_V_1_vld_in = ap_const_logic_1))) then 
                                        out_V_last_V_1_sel_wr <= not(out_V_last_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    out_V_last_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_V_last_V_1_state <= ap_const_lv2_0;
            else
                if ((((out_V_last_V_1_state = ap_const_lv2_2) and (out_V_last_V_1_vld_in = ap_const_logic_0)) or ((out_V_last_V_1_state = ap_const_lv2_3) and (out_V_last_V_1_vld_in = ap_const_logic_0) and (out_V_last_V_1_ack_out = ap_const_logic_1)))) then 
                    out_V_last_V_1_state <= ap_const_lv2_2;
                elsif ((((out_V_last_V_1_state = ap_const_lv2_1) and (out_V_last_V_1_ack_out = ap_const_logic_0)) or ((out_V_last_V_1_state = ap_const_lv2_3) and (out_V_last_V_1_ack_out = ap_const_logic_0) and (out_V_last_V_1_vld_in = ap_const_logic_1)))) then 
                    out_V_last_V_1_state <= ap_const_lv2_1;
                elsif (((not(((out_V_last_V_1_vld_in = ap_const_logic_0) and (out_V_last_V_1_ack_out = ap_const_logic_1))) and not(((out_V_last_V_1_ack_out = ap_const_logic_0) and (out_V_last_V_1_vld_in = ap_const_logic_1))) and (out_V_last_V_1_state = ap_const_lv2_3)) or ((out_V_last_V_1_state = ap_const_lv2_1) and (out_V_last_V_1_ack_out = ap_const_logic_1)) or ((out_V_last_V_1_state = ap_const_lv2_2) and (out_V_last_V_1_vld_in = ap_const_logic_1)))) then 
                    out_V_last_V_1_state <= ap_const_lv2_3;
                else 
                    out_V_last_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    out_V_strb_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_V_strb_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((out_V_strb_V_1_ack_out = ap_const_logic_1) and (out_V_strb_V_1_vld_out = ap_const_logic_1))) then 
                                        out_V_strb_V_1_sel_rd <= not(out_V_strb_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    out_V_strb_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_V_strb_V_1_state <= ap_const_lv2_0;
            else
                if ((((out_V_strb_V_1_state = ap_const_lv2_2) and (out_V_strb_V_1_vld_in = ap_const_logic_0)) or ((out_V_strb_V_1_state = ap_const_lv2_3) and (out_V_strb_V_1_vld_in = ap_const_logic_0) and (out_V_strb_V_1_ack_out = ap_const_logic_1)))) then 
                    out_V_strb_V_1_state <= ap_const_lv2_2;
                elsif ((((out_V_strb_V_1_state = ap_const_lv2_1) and (out_V_strb_V_1_ack_out = ap_const_logic_0)) or ((out_V_strb_V_1_state = ap_const_lv2_3) and (out_V_strb_V_1_ack_out = ap_const_logic_0) and (out_V_strb_V_1_vld_in = ap_const_logic_1)))) then 
                    out_V_strb_V_1_state <= ap_const_lv2_1;
                elsif (((not(((out_V_strb_V_1_vld_in = ap_const_logic_0) and (out_V_strb_V_1_ack_out = ap_const_logic_1))) and not(((out_V_strb_V_1_ack_out = ap_const_logic_0) and (out_V_strb_V_1_vld_in = ap_const_logic_1))) and (out_V_strb_V_1_state = ap_const_lv2_3)) or ((out_V_strb_V_1_state = ap_const_lv2_1) and (out_V_strb_V_1_ack_out = ap_const_logic_1)) or ((out_V_strb_V_1_state = ap_const_lv2_2) and (out_V_strb_V_1_vld_in = ap_const_logic_1)))) then 
                    out_V_strb_V_1_state <= ap_const_lv2_3;
                else 
                    out_V_strb_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    out_V_user_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_V_user_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((out_V_user_V_1_ack_out = ap_const_logic_1) and (out_V_user_V_1_vld_out = ap_const_logic_1))) then 
                                        out_V_user_V_1_sel_rd <= not(out_V_user_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    out_V_user_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_V_user_V_1_state <= ap_const_lv2_0;
            else
                if ((((out_V_user_V_1_state = ap_const_lv2_2) and (out_V_user_V_1_vld_in = ap_const_logic_0)) or ((out_V_user_V_1_state = ap_const_lv2_3) and (out_V_user_V_1_vld_in = ap_const_logic_0) and (out_V_user_V_1_ack_out = ap_const_logic_1)))) then 
                    out_V_user_V_1_state <= ap_const_lv2_2;
                elsif ((((out_V_user_V_1_state = ap_const_lv2_1) and (out_V_user_V_1_ack_out = ap_const_logic_0)) or ((out_V_user_V_1_state = ap_const_lv2_3) and (out_V_user_V_1_ack_out = ap_const_logic_0) and (out_V_user_V_1_vld_in = ap_const_logic_1)))) then 
                    out_V_user_V_1_state <= ap_const_lv2_1;
                elsif (((not(((out_V_user_V_1_vld_in = ap_const_logic_0) and (out_V_user_V_1_ack_out = ap_const_logic_1))) and not(((out_V_user_V_1_ack_out = ap_const_logic_0) and (out_V_user_V_1_vld_in = ap_const_logic_1))) and (out_V_user_V_1_state = ap_const_lv2_3)) or ((out_V_user_V_1_state = ap_const_lv2_1) and (out_V_user_V_1_ack_out = ap_const_logic_1)) or ((out_V_user_V_1_state = ap_const_lv2_2) and (out_V_user_V_1_vld_in = ap_const_logic_1)))) then 
                    out_V_user_V_1_state <= ap_const_lv2_3;
                else 
                    out_V_user_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    col_1_reg_306_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((out_V_data_V_1_ack_in = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                col_1_reg_306 <= col_3_reg_692;
            elsif ((not(((out_V_dest_V_1_ack_in = ap_const_logic_0) or (out_V_id_V_1_ack_in = ap_const_logic_0) or (out_V_last_V_1_ack_in = ap_const_logic_0) or (out_V_user_V_1_ack_in = ap_const_logic_0) or (out_V_strb_V_1_ack_in = ap_const_logic_0) or (out_V_keep_V_1_ack_in = ap_const_logic_0) or (out_V_data_V_1_ack_in = ap_const_logic_0))) and (tmp_5_fu_329_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                col_1_reg_306 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    col_reg_284_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                col_reg_284 <= ap_const_lv10_0;
            elsif ((not((((tmp_fu_317_p2 = ap_const_lv1_1) and (buff2_V_V_full_n = ap_const_logic_0)) or ((tmp_fu_317_p2 = ap_const_lv1_0) and (buff2_V_V_full_n = ap_const_logic_0)) or ((tmp_fu_317_p2 = ap_const_lv1_0) and (buff1_V_V_full_n = ap_const_logic_0)))) and (tmp_fu_317_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                col_reg_284 <= col_2_fu_323_p2;
            end if; 
        end if;
    end process;

    row_reg_295_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_boolean_1 = ap_block_state4_io) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff2_V_V_empty_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff1_V_V_empty_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff2_V_V_full_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff1_V_V_full_n = ap_const_logic_0)))) and (tmp_7_fu_362_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                row_reg_295 <= row_1_reg_679;
            elsif ((not((((tmp_fu_317_p2 = ap_const_lv1_1) and (buff2_V_V_full_n = ap_const_logic_0)) or ((tmp_fu_317_p2 = ap_const_lv1_0) and (buff2_V_V_full_n = ap_const_logic_0)) or ((tmp_fu_317_p2 = ap_const_lv1_0) and (buff1_V_V_full_n = ap_const_logic_0)))) and (tmp_fu_317_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                row_reg_295 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_boolean_1 = ap_block_state4_io) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff2_V_V_empty_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff1_V_V_empty_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff2_V_V_full_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff1_V_V_full_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                col_3_reg_692 <= col_3_fu_368_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((in_V_data_V_0_load_A = ap_const_logic_1)) then
                in_V_data_V_0_payload_A <= in_r_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((in_V_data_V_0_load_B = ap_const_logic_1)) then
                in_V_data_V_0_payload_B <= in_r_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((out_V_data_V_1_load_A = ap_const_logic_1)) then
                out_V_data_V_1_payload_A <= tmp_data_V_fu_536_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((out_V_data_V_1_load_B = ap_const_logic_1)) then
                out_V_data_V_1_payload_B <= tmp_data_V_fu_536_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((out_V_last_V_1_load_A = ap_const_logic_1)) then
                out_V_last_V_1_payload_A <= tmp_last_V_fu_553_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((out_V_last_V_1_load_B = ap_const_logic_1)) then
                out_V_last_V_1_payload_B <= tmp_last_V_fu_553_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((out_V_dest_V_1_ack_in = ap_const_logic_0) or (out_V_id_V_1_ack_in = ap_const_logic_0) or (out_V_last_V_1_ack_in = ap_const_logic_0) or (out_V_user_V_1_ack_in = ap_const_logic_0) or (out_V_strb_V_1_ack_in = ap_const_logic_0) or (out_V_keep_V_1_ack_in = ap_const_logic_0) or (out_V_data_V_1_ack_in = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                row_1_reg_679 <= row_1_fu_335_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_boolean_1 = ap_block_state4_io) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff2_V_V_empty_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff1_V_V_empty_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff2_V_V_full_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff1_V_V_full_n = ap_const_logic_0)))) and (tmp_7_fu_362_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                swin_0_1_V_1_fu_184 <= buff1_V_V_dout;
                swin_0_1_V_fu_180 <= swin_0_1_V_1_fu_184;
                swin_1_0_V_fu_192 <= swin_1_1_V_fu_196;
                swin_1_1_V_fu_196 <= buff2_V_V_dout;
                swin_2_0_V_fu_204 <= swin_2_1_V_fu_208;
                swin_2_1_V_fu_208 <= grp_fu_599_p3(19 downto 12);
                tmp_V_1_fu_200 <= swin_2_0_V_fu_204;
                tmp_V_fu_188 <= swin_1_0_V_fu_192;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((out_V_dest_V_1_ack_in = ap_const_logic_0) or (out_V_id_V_1_ack_in = ap_const_logic_0) or (out_V_last_V_1_ack_in = ap_const_logic_0) or (out_V_user_V_1_ack_in = ap_const_logic_0) or (out_V_strb_V_1_ack_in = ap_const_logic_0) or (out_V_keep_V_1_ack_in = ap_const_logic_0) or (out_V_data_V_1_ack_in = ap_const_logic_0))) and (tmp_5_fu_329_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                tmp_6_reg_684 <= tmp_6_fu_341_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, in_V_data_V_0_vld_out, out_V_data_V_1_ack_in, out_V_data_V_1_state, out_V_keep_V_1_ack_in, out_V_keep_V_1_state, out_V_strb_V_1_ack_in, out_V_strb_V_1_state, out_V_user_V_1_ack_in, out_V_user_V_1_state, out_V_last_V_1_ack_in, out_V_last_V_1_state, out_V_id_V_1_ack_in, out_V_id_V_1_state, out_V_dest_V_1_ack_in, out_V_dest_V_1_state, ap_CS_fsm_state4, tmp_7_fu_362_p2, ap_CS_fsm_state5, ap_CS_fsm_state2, buff1_V_V_full_n, tmp_fu_317_p2, buff2_V_V_full_n, ap_CS_fsm_state3, tmp_5_fu_329_p2, buff1_V_V_empty_n, buff2_V_V_empty_n, ap_block_state4_io)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((not((((tmp_fu_317_p2 = ap_const_lv1_1) and (buff2_V_V_full_n = ap_const_logic_0)) or ((tmp_fu_317_p2 = ap_const_lv1_0) and (buff2_V_V_full_n = ap_const_logic_0)) or ((tmp_fu_317_p2 = ap_const_lv1_0) and (buff1_V_V_full_n = ap_const_logic_0)))) and (tmp_fu_317_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                elsif ((not((((tmp_fu_317_p2 = ap_const_lv1_1) and (buff2_V_V_full_n = ap_const_logic_0)) or ((tmp_fu_317_p2 = ap_const_lv1_0) and (buff2_V_V_full_n = ap_const_logic_0)) or ((tmp_fu_317_p2 = ap_const_lv1_0) and (buff1_V_V_full_n = ap_const_logic_0)))) and (tmp_fu_317_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if ((not(((out_V_dest_V_1_ack_in = ap_const_logic_0) or (out_V_id_V_1_ack_in = ap_const_logic_0) or (out_V_last_V_1_ack_in = ap_const_logic_0) or (out_V_user_V_1_ack_in = ap_const_logic_0) or (out_V_strb_V_1_ack_in = ap_const_logic_0) or (out_V_keep_V_1_ack_in = ap_const_logic_0) or (out_V_data_V_1_ack_in = ap_const_logic_0))) and (tmp_5_fu_329_p2 = ap_const_lv1_1) and (out_V_dest_V_1_state(0) = ap_const_logic_0) and (out_V_id_V_1_state(0) = ap_const_logic_0) and (out_V_last_V_1_state(0) = ap_const_logic_0) and (out_V_user_V_1_state(0) = ap_const_logic_0) and (out_V_strb_V_1_state(0) = ap_const_logic_0) and (out_V_keep_V_1_state(0) = ap_const_logic_0) and (out_V_data_V_1_state(0) = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif ((not(((out_V_dest_V_1_ack_in = ap_const_logic_0) or (out_V_id_V_1_ack_in = ap_const_logic_0) or (out_V_last_V_1_ack_in = ap_const_logic_0) or (out_V_user_V_1_ack_in = ap_const_logic_0) or (out_V_strb_V_1_ack_in = ap_const_logic_0) or (out_V_keep_V_1_ack_in = ap_const_logic_0) or (out_V_data_V_1_ack_in = ap_const_logic_0))) and (tmp_5_fu_329_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if ((not(((ap_const_boolean_1 = ap_block_state4_io) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff2_V_V_empty_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff1_V_V_empty_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff2_V_V_full_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff1_V_V_full_n = ap_const_logic_0)))) and (tmp_7_fu_362_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                elsif ((not(((ap_const_boolean_1 = ap_block_state4_io) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff2_V_V_empty_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff1_V_V_empty_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff2_V_V_full_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff1_V_V_full_n = ap_const_logic_0)))) and (tmp_7_fu_362_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (((out_V_data_V_1_ack_in = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);

    ap_block_state2_assign_proc : process(buff1_V_V_full_n, tmp_fu_317_p2, buff2_V_V_full_n)
    begin
                ap_block_state2 <= (((tmp_fu_317_p2 = ap_const_lv1_1) and (buff2_V_V_full_n = ap_const_logic_0)) or ((tmp_fu_317_p2 = ap_const_lv1_0) and (buff2_V_V_full_n = ap_const_logic_0)) or ((tmp_fu_317_p2 = ap_const_lv1_0) and (buff1_V_V_full_n = ap_const_logic_0)));
    end process;


    ap_block_state3_assign_proc : process(out_V_data_V_1_ack_in, out_V_keep_V_1_ack_in, out_V_strb_V_1_ack_in, out_V_user_V_1_ack_in, out_V_last_V_1_ack_in, out_V_id_V_1_ack_in, out_V_dest_V_1_ack_in)
    begin
                ap_block_state3 <= ((out_V_dest_V_1_ack_in = ap_const_logic_0) or (out_V_id_V_1_ack_in = ap_const_logic_0) or (out_V_last_V_1_ack_in = ap_const_logic_0) or (out_V_user_V_1_ack_in = ap_const_logic_0) or (out_V_strb_V_1_ack_in = ap_const_logic_0) or (out_V_keep_V_1_ack_in = ap_const_logic_0) or (out_V_data_V_1_ack_in = ap_const_logic_0));
    end process;


    ap_block_state4_assign_proc : process(in_V_data_V_0_vld_out, tmp_7_fu_362_p2, buff1_V_V_full_n, buff2_V_V_full_n, buff1_V_V_empty_n, buff2_V_V_empty_n)
    begin
                ap_block_state4 <= (((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff2_V_V_empty_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff1_V_V_empty_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff2_V_V_full_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff1_V_V_full_n = ap_const_logic_0)));
    end process;


    ap_block_state4_io_assign_proc : process(out_V_data_V_1_ack_in, tmp_7_fu_362_p2)
    begin
                ap_block_state4_io <= ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (out_V_data_V_1_ack_in = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(out_V_data_V_1_ack_in, out_V_data_V_1_state, out_V_keep_V_1_ack_in, out_V_keep_V_1_state, out_V_strb_V_1_ack_in, out_V_strb_V_1_state, out_V_user_V_1_ack_in, out_V_user_V_1_state, out_V_last_V_1_ack_in, out_V_last_V_1_state, out_V_id_V_1_ack_in, out_V_id_V_1_state, out_V_dest_V_1_ack_in, out_V_dest_V_1_state, ap_CS_fsm_state3, tmp_5_fu_329_p2)
    begin
        if ((not(((out_V_dest_V_1_ack_in = ap_const_logic_0) or (out_V_id_V_1_ack_in = ap_const_logic_0) or (out_V_last_V_1_ack_in = ap_const_logic_0) or (out_V_user_V_1_ack_in = ap_const_logic_0) or (out_V_strb_V_1_ack_in = ap_const_logic_0) or (out_V_keep_V_1_ack_in = ap_const_logic_0) or (out_V_data_V_1_ack_in = ap_const_logic_0))) and (tmp_5_fu_329_p2 = ap_const_lv1_1) and (out_V_dest_V_1_state(0) = ap_const_logic_0) and (out_V_id_V_1_state(0) = ap_const_logic_0) and (out_V_last_V_1_state(0) = ap_const_logic_0) and (out_V_user_V_1_state(0) = ap_const_logic_0) and (out_V_strb_V_1_state(0) = ap_const_logic_0) and (out_V_keep_V_1_state(0) = ap_const_logic_0) and (out_V_data_V_1_state(0) = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(out_V_data_V_1_ack_in, out_V_data_V_1_state, out_V_keep_V_1_ack_in, out_V_keep_V_1_state, out_V_strb_V_1_ack_in, out_V_strb_V_1_state, out_V_user_V_1_ack_in, out_V_user_V_1_state, out_V_last_V_1_ack_in, out_V_last_V_1_state, out_V_id_V_1_ack_in, out_V_id_V_1_state, out_V_dest_V_1_ack_in, out_V_dest_V_1_state, ap_CS_fsm_state3, tmp_5_fu_329_p2)
    begin
        if ((not(((out_V_dest_V_1_ack_in = ap_const_logic_0) or (out_V_id_V_1_ack_in = ap_const_logic_0) or (out_V_last_V_1_ack_in = ap_const_logic_0) or (out_V_user_V_1_ack_in = ap_const_logic_0) or (out_V_strb_V_1_ack_in = ap_const_logic_0) or (out_V_keep_V_1_ack_in = ap_const_logic_0) or (out_V_data_V_1_ack_in = ap_const_logic_0))) and (tmp_5_fu_329_p2 = ap_const_lv1_1) and (out_V_dest_V_1_state(0) = ap_const_logic_0) and (out_V_id_V_1_state(0) = ap_const_logic_0) and (out_V_last_V_1_state(0) = ap_const_logic_0) and (out_V_user_V_1_state(0) = ap_const_logic_0) and (out_V_strb_V_1_state(0) = ap_const_logic_0) and (out_V_keep_V_1_state(0) = ap_const_logic_0) and (out_V_data_V_1_state(0) = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    buff1_V_V_din_assign_proc : process(in_V_data_V_0_vld_out, ap_CS_fsm_state4, tmp_7_fu_362_p2, ap_CS_fsm_state2, buff1_V_V_full_n, tmp_fu_317_p2, buff2_V_V_full_n, buff1_V_V_empty_n, buff2_V_V_empty_n, tmp_V_fu_188)
    begin
        if ((not((((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff2_V_V_empty_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff1_V_V_empty_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff2_V_V_full_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff1_V_V_full_n = ap_const_logic_0)))) and (tmp_7_fu_362_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            buff1_V_V_din <= tmp_V_fu_188;
        elsif ((not((((tmp_fu_317_p2 = ap_const_lv1_1) and (buff2_V_V_full_n = ap_const_logic_0)) or ((tmp_fu_317_p2 = ap_const_lv1_0) and (buff2_V_V_full_n = ap_const_logic_0)) or ((tmp_fu_317_p2 = ap_const_lv1_0) and (buff1_V_V_full_n = ap_const_logic_0)))) and (tmp_fu_317_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            buff1_V_V_din <= ap_const_lv8_0;
        else 
            buff1_V_V_din <= "XXXXXXXX";
        end if; 
    end process;


    buff1_V_V_read_assign_proc : process(in_V_data_V_0_vld_out, ap_CS_fsm_state4, tmp_7_fu_362_p2, buff1_V_V_full_n, buff2_V_V_full_n, buff1_V_V_empty_n, buff2_V_V_empty_n, ap_block_state4_io)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state4_io) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff2_V_V_empty_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff1_V_V_empty_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff2_V_V_full_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff1_V_V_full_n = ap_const_logic_0)))) and (tmp_7_fu_362_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            buff1_V_V_read <= ap_const_logic_1;
        else 
            buff1_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    buff1_V_V_write_assign_proc : process(in_V_data_V_0_vld_out, ap_CS_fsm_state4, tmp_7_fu_362_p2, ap_CS_fsm_state2, buff1_V_V_full_n, tmp_fu_317_p2, buff2_V_V_full_n, buff1_V_V_empty_n, buff2_V_V_empty_n, ap_block_state4_io)
    begin
        if (((not((((tmp_fu_317_p2 = ap_const_lv1_1) and (buff2_V_V_full_n = ap_const_logic_0)) or ((tmp_fu_317_p2 = ap_const_lv1_0) and (buff2_V_V_full_n = ap_const_logic_0)) or ((tmp_fu_317_p2 = ap_const_lv1_0) and (buff1_V_V_full_n = ap_const_logic_0)))) and (tmp_fu_317_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((ap_const_boolean_1 = ap_block_state4_io) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff2_V_V_empty_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff1_V_V_empty_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff2_V_V_full_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff1_V_V_full_n = ap_const_logic_0)))) and (tmp_7_fu_362_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            buff1_V_V_write <= ap_const_logic_1;
        else 
            buff1_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    buff2_V_V_din_assign_proc : process(in_V_data_V_0_vld_out, ap_CS_fsm_state4, tmp_7_fu_362_p2, ap_CS_fsm_state2, buff1_V_V_full_n, tmp_fu_317_p2, buff2_V_V_full_n, buff1_V_V_empty_n, buff2_V_V_empty_n, tmp_V_1_fu_200)
    begin
        if ((not((((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff2_V_V_empty_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff1_V_V_empty_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff2_V_V_full_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff1_V_V_full_n = ap_const_logic_0)))) and (tmp_7_fu_362_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            buff2_V_V_din <= tmp_V_1_fu_200;
        elsif (((not((((tmp_fu_317_p2 = ap_const_lv1_1) and (buff2_V_V_full_n = ap_const_logic_0)) or ((tmp_fu_317_p2 = ap_const_lv1_0) and (buff2_V_V_full_n = ap_const_logic_0)) or ((tmp_fu_317_p2 = ap_const_lv1_0) and (buff1_V_V_full_n = ap_const_logic_0)))) and (tmp_fu_317_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not((((tmp_fu_317_p2 = ap_const_lv1_1) and (buff2_V_V_full_n = ap_const_logic_0)) or ((tmp_fu_317_p2 = ap_const_lv1_0) and (buff2_V_V_full_n = ap_const_logic_0)) or ((tmp_fu_317_p2 = ap_const_lv1_0) and (buff1_V_V_full_n = ap_const_logic_0)))) and (tmp_fu_317_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            buff2_V_V_din <= ap_const_lv8_0;
        else 
            buff2_V_V_din <= "XXXXXXXX";
        end if; 
    end process;


    buff2_V_V_read_assign_proc : process(in_V_data_V_0_vld_out, ap_CS_fsm_state4, tmp_7_fu_362_p2, buff1_V_V_full_n, buff2_V_V_full_n, buff1_V_V_empty_n, buff2_V_V_empty_n, ap_block_state4_io)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state4_io) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff2_V_V_empty_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff1_V_V_empty_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff2_V_V_full_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff1_V_V_full_n = ap_const_logic_0)))) and (tmp_7_fu_362_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            buff2_V_V_read <= ap_const_logic_1;
        else 
            buff2_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    buff2_V_V_write_assign_proc : process(in_V_data_V_0_vld_out, ap_CS_fsm_state4, tmp_7_fu_362_p2, ap_CS_fsm_state2, buff1_V_V_full_n, tmp_fu_317_p2, buff2_V_V_full_n, buff1_V_V_empty_n, buff2_V_V_empty_n, ap_block_state4_io)
    begin
        if (((not((((tmp_fu_317_p2 = ap_const_lv1_1) and (buff2_V_V_full_n = ap_const_logic_0)) or ((tmp_fu_317_p2 = ap_const_lv1_0) and (buff2_V_V_full_n = ap_const_logic_0)) or ((tmp_fu_317_p2 = ap_const_lv1_0) and (buff1_V_V_full_n = ap_const_logic_0)))) and (tmp_fu_317_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not((((tmp_fu_317_p2 = ap_const_lv1_1) and (buff2_V_V_full_n = ap_const_logic_0)) or ((tmp_fu_317_p2 = ap_const_lv1_0) and (buff2_V_V_full_n = ap_const_logic_0)) or ((tmp_fu_317_p2 = ap_const_lv1_0) and (buff1_V_V_full_n = ap_const_logic_0)))) and (tmp_fu_317_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((ap_const_boolean_1 = ap_block_state4_io) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff2_V_V_empty_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff1_V_V_empty_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff2_V_V_full_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff1_V_V_full_n = ap_const_logic_0)))) and (tmp_7_fu_362_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            buff2_V_V_write <= ap_const_logic_1;
        else 
            buff2_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    col_2_fu_323_p2 <= std_logic_vector(unsigned(col_reg_284) + unsigned(ap_const_lv10_1));
    col_3_fu_368_p2 <= std_logic_vector(unsigned(col_1_reg_306) + unsigned(ap_const_lv10_1));
    grp_fu_599_p0 <= grp_fu_599_p00(9 - 1 downto 0);
    grp_fu_599_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_fu_417_p2),10));
    grp_fu_599_p1 <= grp_fu_599_p10(8 - 1 downto 0);
    grp_fu_599_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_423_p1),10));
    grp_fu_599_p2 <= ap_const_lv22_556(12 - 1 downto 0);
    icmp_fu_518_p2 <= "1" when (tmp_9_fu_508_p4 = ap_const_lv2_1) else "0";
    in_V_data_V_0_ack_in <= in_V_data_V_0_state(1);

    in_V_data_V_0_ack_out_assign_proc : process(in_V_data_V_0_vld_out, ap_CS_fsm_state4, tmp_7_fu_362_p2, buff1_V_V_full_n, buff2_V_V_full_n, buff1_V_V_empty_n, buff2_V_V_empty_n, ap_block_state4_io)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state4_io) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff2_V_V_empty_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff1_V_V_empty_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff2_V_V_full_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff1_V_V_full_n = ap_const_logic_0)))) and (tmp_7_fu_362_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            in_V_data_V_0_ack_out <= ap_const_logic_1;
        else 
            in_V_data_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    in_V_data_V_0_data_out_assign_proc : process(in_V_data_V_0_payload_A, in_V_data_V_0_payload_B, in_V_data_V_0_sel)
    begin
        if ((in_V_data_V_0_sel = ap_const_logic_1)) then 
            in_V_data_V_0_data_out <= in_V_data_V_0_payload_B;
        else 
            in_V_data_V_0_data_out <= in_V_data_V_0_payload_A;
        end if; 
    end process;

    in_V_data_V_0_load_A <= (in_V_data_V_0_state_cmp_full and not(in_V_data_V_0_sel_wr));
    in_V_data_V_0_load_B <= (in_V_data_V_0_state_cmp_full and in_V_data_V_0_sel_wr);
    in_V_data_V_0_sel <= in_V_data_V_0_sel_rd;
    in_V_data_V_0_state_cmp_full <= '0' when (in_V_data_V_0_state = ap_const_lv2_1) else '1';
    in_V_data_V_0_vld_in <= in_r_TVALID;
    in_V_data_V_0_vld_out <= in_V_data_V_0_state(0);

    in_V_dest_V_0_ack_out_assign_proc : process(in_V_data_V_0_vld_out, ap_CS_fsm_state4, tmp_7_fu_362_p2, buff1_V_V_full_n, buff2_V_V_full_n, buff1_V_V_empty_n, buff2_V_V_empty_n, ap_block_state4_io)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state4_io) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff2_V_V_empty_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff1_V_V_empty_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff2_V_V_full_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff1_V_V_full_n = ap_const_logic_0)))) and (tmp_7_fu_362_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            in_V_dest_V_0_ack_out <= ap_const_logic_1;
        else 
            in_V_dest_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;

    in_V_dest_V_0_vld_in <= in_r_TVALID;

    in_r_TDATA_blk_n_assign_proc : process(in_V_data_V_0_state, ap_CS_fsm_state4, tmp_7_fu_362_p2)
    begin
        if (((tmp_7_fu_362_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            in_r_TDATA_blk_n <= in_V_data_V_0_state(0);
        else 
            in_r_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_r_TREADY <= in_V_dest_V_0_state(1);
    lhs_V_2_cast_fu_444_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(buff1_V_V_dout),9));
    lhs_V_3_cast_fu_448_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(swin_0_1_V_fu_180),9));
    lhs_V_4_cast_fu_458_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(swin_2_0_V_fu_204),9));
        lhs_V_5_cast_fu_468_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_2_fu_452_p2),10));

    lhs_V_cast_fu_409_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_s_fu_389_p4),9));
    out_V_data_V_1_ack_in <= out_V_data_V_1_state(1);
    out_V_data_V_1_ack_out <= out_r_TREADY;

    out_V_data_V_1_data_out_assign_proc : process(out_V_data_V_1_payload_A, out_V_data_V_1_payload_B, out_V_data_V_1_sel)
    begin
        if ((out_V_data_V_1_sel = ap_const_logic_1)) then 
            out_V_data_V_1_data_out <= out_V_data_V_1_payload_B;
        else 
            out_V_data_V_1_data_out <= out_V_data_V_1_payload_A;
        end if; 
    end process;

    out_V_data_V_1_load_A <= (out_V_data_V_1_state_cmp_full and not(out_V_data_V_1_sel_wr));
    out_V_data_V_1_load_B <= (out_V_data_V_1_state_cmp_full and out_V_data_V_1_sel_wr);
    out_V_data_V_1_sel <= out_V_data_V_1_sel_rd;
    out_V_data_V_1_state_cmp_full <= '0' when (out_V_data_V_1_state = ap_const_lv2_1) else '1';

    out_V_data_V_1_vld_in_assign_proc : process(in_V_data_V_0_vld_out, ap_CS_fsm_state4, tmp_7_fu_362_p2, buff1_V_V_full_n, buff2_V_V_full_n, buff1_V_V_empty_n, buff2_V_V_empty_n, ap_block_state4_io)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state4_io) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff2_V_V_empty_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff1_V_V_empty_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff2_V_V_full_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff1_V_V_full_n = ap_const_logic_0)))) and (tmp_7_fu_362_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            out_V_data_V_1_vld_in <= ap_const_logic_1;
        else 
            out_V_data_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    out_V_data_V_1_vld_out <= out_V_data_V_1_state(0);
    out_V_dest_V_1_ack_in <= out_V_dest_V_1_state(1);
    out_V_dest_V_1_ack_out <= out_r_TREADY;
    out_V_dest_V_1_data_out <= ap_const_lv1_1;
    out_V_dest_V_1_sel <= out_V_dest_V_1_sel_rd;

    out_V_dest_V_1_vld_in_assign_proc : process(in_V_data_V_0_vld_out, ap_CS_fsm_state4, tmp_7_fu_362_p2, buff1_V_V_full_n, buff2_V_V_full_n, buff1_V_V_empty_n, buff2_V_V_empty_n, ap_block_state4_io)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state4_io) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff2_V_V_empty_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff1_V_V_empty_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff2_V_V_full_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff1_V_V_full_n = ap_const_logic_0)))) and (tmp_7_fu_362_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            out_V_dest_V_1_vld_in <= ap_const_logic_1;
        else 
            out_V_dest_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    out_V_dest_V_1_vld_out <= out_V_dest_V_1_state(0);
    out_V_id_V_1_ack_in <= out_V_id_V_1_state(1);
    out_V_id_V_1_ack_out <= out_r_TREADY;
    out_V_id_V_1_data_out <= ap_const_lv1_1;
    out_V_id_V_1_sel <= out_V_id_V_1_sel_rd;

    out_V_id_V_1_vld_in_assign_proc : process(in_V_data_V_0_vld_out, ap_CS_fsm_state4, tmp_7_fu_362_p2, buff1_V_V_full_n, buff2_V_V_full_n, buff1_V_V_empty_n, buff2_V_V_empty_n, ap_block_state4_io)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state4_io) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff2_V_V_empty_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff1_V_V_empty_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff2_V_V_full_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff1_V_V_full_n = ap_const_logic_0)))) and (tmp_7_fu_362_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            out_V_id_V_1_vld_in <= ap_const_logic_1;
        else 
            out_V_id_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    out_V_id_V_1_vld_out <= out_V_id_V_1_state(0);
    out_V_keep_V_1_ack_in <= out_V_keep_V_1_state(1);
    out_V_keep_V_1_ack_out <= out_r_TREADY;
    out_V_keep_V_1_data_out <= ap_const_lv3_7;
    out_V_keep_V_1_sel <= out_V_keep_V_1_sel_rd;

    out_V_keep_V_1_vld_in_assign_proc : process(in_V_data_V_0_vld_out, ap_CS_fsm_state4, tmp_7_fu_362_p2, buff1_V_V_full_n, buff2_V_V_full_n, buff1_V_V_empty_n, buff2_V_V_empty_n, ap_block_state4_io)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state4_io) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff2_V_V_empty_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff1_V_V_empty_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff2_V_V_full_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff1_V_V_full_n = ap_const_logic_0)))) and (tmp_7_fu_362_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            out_V_keep_V_1_vld_in <= ap_const_logic_1;
        else 
            out_V_keep_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    out_V_keep_V_1_vld_out <= out_V_keep_V_1_state(0);
    out_V_last_V_1_ack_in <= out_V_last_V_1_state(1);
    out_V_last_V_1_ack_out <= out_r_TREADY;

    out_V_last_V_1_data_out_assign_proc : process(out_V_last_V_1_payload_A, out_V_last_V_1_payload_B, out_V_last_V_1_sel)
    begin
        if ((out_V_last_V_1_sel = ap_const_logic_1)) then 
            out_V_last_V_1_data_out <= out_V_last_V_1_payload_B;
        else 
            out_V_last_V_1_data_out <= out_V_last_V_1_payload_A;
        end if; 
    end process;

    out_V_last_V_1_load_A <= (out_V_last_V_1_state_cmp_full and not(out_V_last_V_1_sel_wr));
    out_V_last_V_1_load_B <= (out_V_last_V_1_state_cmp_full and out_V_last_V_1_sel_wr);
    out_V_last_V_1_sel <= out_V_last_V_1_sel_rd;
    out_V_last_V_1_state_cmp_full <= '0' when (out_V_last_V_1_state = ap_const_lv2_1) else '1';

    out_V_last_V_1_vld_in_assign_proc : process(in_V_data_V_0_vld_out, ap_CS_fsm_state4, tmp_7_fu_362_p2, buff1_V_V_full_n, buff2_V_V_full_n, buff1_V_V_empty_n, buff2_V_V_empty_n, ap_block_state4_io)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state4_io) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff2_V_V_empty_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff1_V_V_empty_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff2_V_V_full_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff1_V_V_full_n = ap_const_logic_0)))) and (tmp_7_fu_362_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            out_V_last_V_1_vld_in <= ap_const_logic_1;
        else 
            out_V_last_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    out_V_last_V_1_vld_out <= out_V_last_V_1_state(0);
    out_V_strb_V_1_ack_in <= out_V_strb_V_1_state(1);
    out_V_strb_V_1_ack_out <= out_r_TREADY;
    out_V_strb_V_1_data_out <= ap_const_lv3_7;
    out_V_strb_V_1_sel <= out_V_strb_V_1_sel_rd;

    out_V_strb_V_1_vld_in_assign_proc : process(in_V_data_V_0_vld_out, ap_CS_fsm_state4, tmp_7_fu_362_p2, buff1_V_V_full_n, buff2_V_V_full_n, buff1_V_V_empty_n, buff2_V_V_empty_n, ap_block_state4_io)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state4_io) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff2_V_V_empty_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff1_V_V_empty_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff2_V_V_full_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff1_V_V_full_n = ap_const_logic_0)))) and (tmp_7_fu_362_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            out_V_strb_V_1_vld_in <= ap_const_logic_1;
        else 
            out_V_strb_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    out_V_strb_V_1_vld_out <= out_V_strb_V_1_state(0);
    out_V_user_V_1_ack_in <= out_V_user_V_1_state(1);
    out_V_user_V_1_ack_out <= out_r_TREADY;
    out_V_user_V_1_data_out <= ap_const_lv1_1;
    out_V_user_V_1_sel <= out_V_user_V_1_sel_rd;

    out_V_user_V_1_vld_in_assign_proc : process(in_V_data_V_0_vld_out, ap_CS_fsm_state4, tmp_7_fu_362_p2, buff1_V_V_full_n, buff2_V_V_full_n, buff1_V_V_empty_n, buff2_V_V_empty_n, ap_block_state4_io)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state4_io) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff2_V_V_empty_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff1_V_V_empty_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (in_V_data_V_0_vld_out = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff2_V_V_full_n = ap_const_logic_0)) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (buff1_V_V_full_n = ap_const_logic_0)))) and (tmp_7_fu_362_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            out_V_user_V_1_vld_in <= ap_const_logic_1;
        else 
            out_V_user_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    out_V_user_V_1_vld_out <= out_V_user_V_1_state(0);
    out_r_TDATA <= out_V_data_V_1_data_out;

    out_r_TDATA_blk_n_assign_proc : process(out_V_data_V_1_state, ap_CS_fsm_state4, tmp_7_fu_362_p2, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((tmp_7_fu_362_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            out_r_TDATA_blk_n <= out_V_data_V_1_state(1);
        else 
            out_r_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_r_TDEST <= out_V_dest_V_1_data_out;
    out_r_TID <= out_V_id_V_1_data_out;
    out_r_TKEEP <= out_V_keep_V_1_data_out;
    out_r_TLAST <= out_V_last_V_1_data_out;
    out_r_TSTRB <= out_V_strb_V_1_data_out;
    out_r_TUSER <= out_V_user_V_1_data_out;
    out_r_TVALID <= out_V_dest_V_1_state(0);
    p_Result_1_fu_399_p4 <= in_V_data_V_0_data_out(15 downto 8);
    p_Result_s_fu_389_p4 <= in_V_data_V_0_data_out(23 downto 16);
    p_s_fu_500_p3 <= 
        ap_const_lv10_0 when (tmp_4_fu_492_p3(0) = '1') else 
        ret_V_5_fu_486_p2;
    ret_V_2_fu_452_p2 <= std_logic_vector(unsigned(lhs_V_3_cast_fu_448_p1) - unsigned(lhs_V_2_cast_fu_444_p1));
    ret_V_3_fu_462_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(lhs_V_4_cast_fu_458_p1));
    ret_V_4_fu_476_p2 <= std_logic_vector(signed(lhs_V_5_cast_fu_468_p1) + signed(rhs_V_3_cast_fu_472_p1));
    ret_V_5_fu_486_p2 <= std_logic_vector(unsigned(ret_V_4_fu_476_p2) + unsigned(rhs_V_4_cast_fu_482_p1));
    ret_V_fu_417_p2 <= std_logic_vector(unsigned(rhs_V_cast_fu_413_p1) + unsigned(lhs_V_cast_fu_409_p1));
        rhs_V_3_cast_fu_472_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_3_fu_462_p2),10));

    rhs_V_4_cast_fu_482_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(swin_2_2_V_fu_435_p4),10));
    rhs_V_cast_fu_413_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_1_fu_399_p4),9));
    row_1_fu_335_p2 <= std_logic_vector(unsigned(row_reg_295) + unsigned(ap_const_lv9_1));
    swin_2_2_V_fu_435_p4 <= grp_fu_599_p3(19 downto 12);
    tmp_10_fu_524_p1 <= p_s_fu_500_p3(8 - 1 downto 0);
    tmp_1_fu_423_p1 <= in_V_data_V_0_data_out(8 - 1 downto 0);
    tmp_3_fu_547_p2 <= "1" when (col_1_reg_306 = ap_const_lv10_27F) else "0";
    tmp_4_fu_492_p3 <= ret_V_5_fu_486_p2(9 downto 9);
    tmp_5_fu_329_p2 <= "1" when (row_reg_295 = ap_const_lv9_1E0) else "0";
    tmp_6_fu_341_p2 <= "1" when (row_reg_295 = ap_const_lv9_1DF) else "0";
    tmp_7_fu_362_p2 <= "1" when (col_1_reg_306 = ap_const_lv10_280) else "0";
    tmp_8_fu_528_p3 <= 
        ap_const_lv8_FF when (icmp_fu_518_p2(0) = '1') else 
        tmp_10_fu_524_p1;
    tmp_9_fu_508_p4 <= p_s_fu_500_p3(9 downto 8);
    tmp_data_V_fu_536_p4 <= ((tmp_8_fu_528_p3 & tmp_8_fu_528_p3) & tmp_8_fu_528_p3);
    tmp_fu_317_p2 <= "1" when (col_reg_284 = ap_const_lv10_27D) else "0";
    tmp_last_V_fu_553_p2 <= (tmp_6_reg_684 and tmp_3_fu_547_p2);
end behav;
